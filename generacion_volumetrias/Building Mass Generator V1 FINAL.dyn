{
  "Uuid": "5ca8fec8-3de9-49c3-a2d9-ddf217cdf378",
  "IsCustomNode": false,
  "Description": "Building Mass Generator V1",
  "Name": "Building Mass Generator V1 FINAL",
  "ElementResolver": {
    "ResolutionMap": {
      "DSCore.Color": {
        "Key": "DSCore.Color",
        "Value": "DSCoreNodes.dll"
      },
      "Math": {
        "Key": "DSCore.Math",
        "Value": "DSCoreNodes.dll"
      },
      "List.length": {
        "Key": "List",
        "Value": "BuiltIn.ds"
      },
      "List": {
        "Key": "List",
        "Value": "BuiltIn.ds"
      }
    }
  },
  "Inputs": [
    {
      "Id": "efe4e9d5f67c4a6894afc2282977fc24",
      "Name": "Select Model Elements",
      "Type": "selection",
      "Type2": "hostSelection",
      "Value": "8cbb9fc6-1717-4ae0-80b0-205c986cbd23-000011ab,8cbb9fc6-1717-4ae0-80b0-205c986cbd23-00001209,8cbb9fc6-1717-4ae0-80b0-205c986cbd23-00001247,8cbb9fc6-1717-4ae0-80b0-205c986cbd23-00001273",
      "Description": "Select multiple elements from the Revit document."
    },
    {
      "Id": "54a757f470a948e095350107d443356c",
      "Name": "File Path",
      "Type": "string",
      "Type2": "string",
      "Value": "Z:\\dynamos\\Building Mass Generator V1 FINAL.Dependencies\\files\\NORMATIVA SIN EL CENTRO - RESTRICCIONES.csv",
      "Description": "Allows you to select a file on the system and returns its file path"
    },
    {
      "Id": "f3fb2964ae644e828d2cf4e8b30d0fa6",
      "Name": "ZonaConstruccion",
      "Type": "selection",
      "Type2": "dropdownSelection",
      "Value": "E-5",
      "Description": "A dropdown menu with customizable values.",
      "SelectedIndex": 4
    },
    {
      "Id": "c554d7fa17de4e75a8871bc375acfd97",
      "Name": "AlturaPisos",
      "Type": "number",
      "Type2": "number",
      "Value": "2",
      "MaximumValue": 3.0,
      "MinimumValue": 0.0,
      "StepValue": 0.01,
      "NumberType": "Double",
      "Description": "Produces numeric values"
    },
    {
      "Id": "23d6e0c5a48740ec9a8b0b2a9ae0cf0d",
      "Name": "CantidadPisos",
      "Type": "number",
      "Type2": "number",
      "Value": "5",
      "MaximumValue": 20.0,
      "MinimumValue": 1.0,
      "StepValue": 1.0,
      "NumberType": "Integer",
      "Description": "Produces integer values"
    }
  ],
  "Outputs": [
    {
      "Id": "a4af0f9b3c1e4fa5bb14c6fc2cdd5b11",
      "Name": "COS_primer_piso",
      "Type": "float",
      "InitialValue": "49",
      "Description": "Visualizes a node's output"
    },
    {
      "Id": "3e49e21ee498433380492bb86bc19b75",
      "Name": "area_total_construida",
      "Type": "float",
      "InitialValue": "1771",
      "Description": "Visualizes a node's output"
    },
    {
      "Id": "dd272abab5944397b5cf7c5203dcdf3a",
      "Name": "area_provisional_para_asensor",
      "Type": "float",
      "InitialValue": "7.5",
      "Description": "Visualizes a node's output"
    },
    {
      "Id": "c1904ac21c684606b098adbd267a484c",
      "Name": "area_total_terreno",
      "Type": "float",
      "InitialValue": "4337.5",
      "Description": "Visualizes a node's output"
    },
    {
      "Id": "d74af90ff7e2488d893614cd0e3bccbc",
      "Name": "CUS_Edificio_Total",
      "Type": "float",
      "InitialValue": "40.83",
      "Description": "Visualizes a node's output"
    },
    {
      "Id": "a17f925d99da4948aad68bd23c7790d6",
      "Name": "Pisos finales",
      "Type": "integer",
      "InitialValue": "5",
      "Description": "Visualizes a node's output"
    }
  ],
  "Nodes": [
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "d2fd781fe9344fe89e9b0bec53f1654f",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "cebb0d70924b48eaa5a4da4d4863f279",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7c477fdbf8984da8a31e2e2061f8fcd9",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "534d4739f4214226bb4e84c35d5d06ba",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "de48e0843452449e92eac4003a56188a",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "55d5485a07a74b6e8a42e4ed0b43395d",
          "Name": "closedCurve",
          "Description": "Closed curve used as surface boundary\n\nCurve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d38de01b3e5749c691dda7a8416f7c1d",
          "Name": "Surface",
          "Description": "Surface created by patch",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.ByPatch@Autodesk.DesignScript.Geometry.Curve",
      "Replication": "Auto",
      "Description": "Create a Surface by filling in the interior of a closed boundary defined by input Curves.\n\nSurface.ByPatch (closedCurve: Curve): Surface"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "9c5d468631b349e7b48203e32f41d87a",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "0546ab0e782a4727be9bfd6835314708",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cc825cd0da934fa4b228a8e47e57208a",
          "Name": "param",
          "Description": "The parameter at which to evaluate\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d3db3b9dd33742ad8da3566f42da3335",
          "Name": "Vector",
          "Description": "A Vector perpendicular to the curve at param",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.NormalAtParameter@double",
      "Replication": "Auto",
      "Description": "Get a Vector perpendicular to the curve at a specified parameter between StartParameter() and EndParameter()\n\nCurve.NormalAtParameter (param: double = 0): Vector"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "5005d2ebff4d4fb09c850c05d23946cf",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "e339f9f8cd744254b7f691123d19024f",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c9df62e51ebf40609410172be5a65a08",
          "Name": "param",
          "Description": "The parameter at which to evaluate\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "212006439d044dada684e445da5730bd",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.PointAtParameter@double",
      "Replication": "Auto",
      "Description": "Get a Point on the Curve at a specified parameter between StartParameter() and EndParameter()\n\nCurve.PointAtParameter (param: double = 0): Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "6c265e95ece84e008d206e486d8e3dca",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "892a1c2c46b848b9a6852c83505d646a",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "0.5;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "79671cd3b15240e59cc8efd10f5f2432",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "c59e835b7839423e8e5af6b1887b893d",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1ba5091646d84a178a249db7525712d8",
          "Name": "direction",
          "Description": "Displacement direction.\n\nVector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "00ade832078c45189f5bf8eb1f938022",
          "Name": "distance",
          "Description": "Displacement distance along given direction.\n\ndouble",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8ee93cf7a7884dbba378e5bd70f914e1",
          "Name": "Geometry",
          "Description": "Transformed Geometry.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.Translate@Autodesk.DesignScript.Geometry.Vector,double",
      "Replication": "Auto",
      "Description": "Translates any geometry type by the given distance in the given direction.\n\nGeometry.Translate (direction: Vector, distance: double): Geometry"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "923d758d769340eb892747e739da45e7",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "eca1dd01943649c3aca5c988a6ec72f5",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "1;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "6fd536730ced4b8696acfb6ee09203aa",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "b9f0d08a69cd439c8546b279db0738ce",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1a12e061c89549b7a25d9b64da305b05",
          "Name": "other",
          "Description": "Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3dcb6ff932ca49179760c188d68543e6",
          "Name": "bool",
          "Description": "bool",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.DoesIntersect@Autodesk.DesignScript.Geometry.Geometry",
      "Replication": "Auto",
      "Description": "Determine if another Geometry object intersects with this one\n\nGeometry.DoesIntersect (other: Geometry): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "a4b8019aad784dd39cdcc2664e4b8d80",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "54629b1107fb496ba336a79971a139bc",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d970635a040c4bcaba3fe3c74be31cd0",
          "Name": "Curve",
          "Description": "A new Curve with the opposite direction",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.Reverse",
      "Replication": "Auto",
      "Description": "Reverse the direction of the curve\n\nCurve.Reverse ( ): Curve"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "fe0c642581f74018b67743a350c9a307",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "7134061d0b224c4b8ee43d57a6506d2a",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "79b2175e724a43f98ef9a11d5c7358ec",
          "Name": "Geometry[]",
          "Description": "Geometry[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.Explode",
      "Replication": "Auto",
      "Description": "Separates compound or non-separated elements into their component parts.\n\nGeometry.Explode ( ): Geometry[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "87d5cc7da2ab4b89b4192c5a04e20dc8",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "00a6d76bf9144cf9b18cd27210a62dce",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "aaacc05bfd4e45d4872ce23640b60149",
          "Name": "param",
          "Description": "The parameter at which to evaluate\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "eaf61f9b426e43cdb40c3c505a7d04fb",
          "Name": "Vector",
          "Description": "A Vector perpendicular to the curve at param",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.NormalAtParameter@double",
      "Replication": "Auto",
      "Description": "Get a Vector perpendicular to the curve at a specified parameter between StartParameter() and EndParameter()\n\nCurve.NormalAtParameter (param: double = 0): Vector"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "67dbec1dd7a14a479ff1d949d5226399",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "a9d2a0b336224457bb6b4b84984d2e38",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "0.5;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "757528320c634f11a234503d34586e43",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "49cc35cad0904ffd9d853e23cf04c53c",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bb600614cdb04f448bee904b36473c29",
          "Name": "direction",
          "Description": "Displacement direction.\n\nVector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8c1074f21523495093ccd979ceeee5a2",
          "Name": "distance",
          "Description": "Displacement distance along given direction.\n\ndouble",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0d30d95bc4a54e9a899dfb80095ee992",
          "Name": "Geometry",
          "Description": "Transformed Geometry.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.Translate@Autodesk.DesignScript.Geometry.Vector,double",
      "Replication": "Auto",
      "Description": "Translates any geometry type by the given distance in the given direction.\n\nGeometry.Translate (direction: Vector, distance: double): Geometry"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "51e93c0b52a94d9a8f1858a85af00a82",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "ae7b77bdd27849019d2212da86ce7525",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0f780020d2424de5941bea16916af440",
          "Name": "distance",
          "Description": "Distance to extend\n\ndouble\nDefault value : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "01aa02bfa0224746a31efe739eef60cb",
          "Name": "Curve",
          "Description": "The extended Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.ExtendStart@double",
      "Replication": "Auto",
      "Description": "Extend a Curve by a given distance on its start side. Closed curves like Circles and Ellipses cannot be extended. If the curve being extended is linear, the extension will also be linear.\n\nCurve.ExtendStart (distance: double = 1): Curve"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "4edd1d4286784e9eb71d13b095632da6",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "5cd18558f55049e49eed1fee99c31ecb",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9b5d879a8faf4cac8eb5d50a02188c76",
          "Name": "distance",
          "Description": "Distance to extend\n\ndouble\nDefault value : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "707bc77a39284d26b5141a0ba32ead27",
          "Name": "Curve",
          "Description": "The extended Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.ExtendEnd@double",
      "Replication": "Auto",
      "Description": "Extend a Curve by a given distance on its end. Closed curves like Circles and Ellipses cannot be extended. If the curve being extended is linear, the extension will also be linear.\n\nCurve.ExtendEnd (distance: double = 1): Curve"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "da8345834459417db16f15a79002b17d",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "016b7bc8059a42619511370307f0c6ea",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "92b726d5b3844339a3683f839e75bf54",
          "Name": "param",
          "Description": "The parameter at which to evaluate\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f08b5378e7304fd98dd7b1f3de534bdb",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.PointAtParameter@double",
      "Replication": "Auto",
      "Description": "Get a Point on the Curve at a specified parameter between StartParameter() and EndParameter()\n\nCurve.PointAtParameter (param: double = 0): Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "f67f9e349679401e8d6049eb4fba22be",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d822f719ebee47a2afa2273553969e13",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "0.1;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "389c3f3fdb484da8b3cabed49b7cbb63",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "6664b5a17a644649b6a301c4af8b840d",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "5d5df835384a4756baec6a479d36dcbd",
          "Name": "other",
          "Description": "Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "50b44d2ddfa04991b780d726f79e63b6",
          "Name": "bool",
          "Description": "bool",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.DoesIntersect@Autodesk.DesignScript.Geometry.Geometry",
      "Replication": "Longest",
      "Description": "Determine if another Geometry object intersects with this one\n\nGeometry.DoesIntersect (other: Geometry): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "7ce3379f72ae41548c81326b080943d5",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "38353a24972e4935b9f6def2d806f50e",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "5ae738889de64718b0a983abd027e8aa",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e45cd8a58d844fc6939e8baf8d19924e",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3c8e2bd617234654884590e79dd3b28f",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Longest",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "d5b398fd67c3432699d988b4b3926751",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "ae5bcd1fdf3b4472939d7195ca81e6d6",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4784ea061b87496385f72c9254197763",
          "Name": "points",
          "Description": "The points on the curve at which to split the curve\n\nPoint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2326d5dfa45d4376a667d27488c36644",
          "Name": "Curve[]",
          "Description": "Curves created from splitting",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.SplitByPoints@Autodesk.DesignScript.Geometry.Point[]",
      "Replication": "Auto",
      "Description": "Split a Curve into multiple pieces at the given points\n\nCurve.SplitByPoints (points: Point[]): Curve[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "96b5108355a9464b82e3b1a9cc19a502",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "20d4a3ef8e664e0883e6d0253e12e00c",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7bc12aa2856247608ada5d86517fe734",
          "Name": "other",
          "Description": "Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4d92e18b780d4199ab489e5015b82428",
          "Name": "bool",
          "Description": "bool",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.DoesIntersect@Autodesk.DesignScript.Geometry.Geometry",
      "Replication": "Auto",
      "Description": "Determine if another Geometry object intersects with this one\n\nGeometry.DoesIntersect (other: Geometry): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "3818cec472f14ad6a879f159763cf5b7",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "0092ce47664b4fa2849184c903947421",
          "Name": "list",
          "Description": "The list to find the element in.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "af7900ddfdee44da8d5cbb637889e66b",
          "Name": "element",
          "Description": "The element whose index is to be returned.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f44aa25bce884944b9b357ff3bc2bc96",
          "Name": "int",
          "Description": "The index of the element in the list. Invalid index -1 will be returned if strict match not found.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.IndexOf@var[]..[],var",
      "Replication": "Auto",
      "Description": "Returns the index of the element in the given list. Match between given list and target element must be a strict match (i.e. int to int, double to double, string to string, object to object etc.)\n\nList.IndexOf (list: var[]..[], element: var): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "902077b7f26a414cb465c2a3ca052595",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "6394d902096d4745a88620dcfba5d8fc",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "true;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "638e7b4c006d4ba989cffd52dedffbc3",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "8f131634d5d64ef690fcaf257c0924ea",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "8b1b3517ad944a8fa908ffdec3cf562b",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "98e020b396c8418faafb86f32ad9a637",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "d43fbc13969f415cb57a4a7baef2d91e",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "78d98e2c1dd24d9383b2cbdd9248250e",
          "Name": "geometry",
          "Description": "The geometry to which you would like to apply color.\n\nGeometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7606023b324a44faa2ca72d51cf1a46d",
          "Name": "color",
          "Description": "The color.\n\nColor",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5c5144d23fb24fc8b567458c37d6aa1b",
          "Name": "GeometryColor",
          "Description": "A Display object.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Modifiers.GeometryColor.ByGeometryColor@Autodesk.DesignScript.Geometry.Geometry,DSCore.Color",
      "Replication": "Auto",
      "Description": "Display geometry using a color.\n\nGeometryColor.ByGeometryColor (geometry: Geometry, color: Color): GeometryColor"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "22f90cee874149aab8ea629b313de270",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "bca76f95bf0740c582db23751f917efe",
          "Name": "alpha",
          "Description": "Alpha value (between 0 and 255 inclusive)\n\nint\nDefault value : 255",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "08c9605845b349fa8c4962639ecd66f5",
          "Name": "red",
          "Description": "Red value for RGB color model (between 0 and 255 inclusive)\n\nint\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "87997658b12947c09dc8c1572d693670",
          "Name": "green",
          "Description": "Green value for RGB color model (between 0 and 255 inclusive)\n\nint\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "54bb4c74979e4ed4a4b4879085e95c5b",
          "Name": "blue",
          "Description": "Blue value for RGB color model (between 0 and 255 inclusive)\n\nint\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a0ea6ade669b48ca9fc1aa369713db20",
          "Name": "color",
          "Description": "Color created from ARGB",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Color.ByARGB@int,int,int,int",
      "Replication": "Auto",
      "Description": "Construct a color by alpha, red, green, and blue components.\n\nColor.ByARGB (alpha: int = 255, red: int = 0, green: int = 0, blue: int = 0): Color"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "aadfc04cd5cc4d5cb332d52783dfd28e",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "3052a66f89a0460585093b66b1066c31",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a10e1038a0354b5baddacaafc333c579",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "255;\n0;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "33bd2036d4fd4bb8982df4ab5ad881df",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "8324c99236324d7eab1f6899f2d9f77f",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e31fb0d497c7465ab7be6a9f0bfec8a5",
          "Name": "direction",
          "Description": "Displacement direction.\n\nVector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8656370408de4e6d96d1e2b2fe32909d",
          "Name": "distance",
          "Description": "Displacement distance along given direction.\n\ndouble",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e1870b7bf48143158b7c8596a297b349",
          "Name": "Geometry",
          "Description": "Transformed Geometry.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.Translate@Autodesk.DesignScript.Geometry.Vector,double",
      "Replication": "Auto",
      "Description": "Translates any geometry type by the given distance in the given direction.\n\nGeometry.Translate (direction: Vector, distance: double): Geometry"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "2828d27cf5c04b7bb23ba3f4f607fa24",
      "NodeType": "FunctionNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f67294a444bf41259b57e5ad15b4cb90",
          "Name": "Vector",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Vector.ZAxis",
      "Replication": "Auto",
      "Description": "Get the canonical Z axis Vector (0,0,1)\n\nVector.ZAxis ( ): Vector"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "5c238076d8254c348342c68f35ebe4e4",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "b78a73a665ee48d190af9648bc6088f2",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "25;"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NumberType": "Double",
      "Id": "fe1aaff34b9940a6954be042980951fa",
      "NodeType": "NumberInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "99d96ce8687748708d16032abb0bae21",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number",
      "InputValue": 9000.0
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "23dcfb05e8a640888153f1d8dc716395",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "9efa076f590e4d288a6587e0c3c2ac15",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f4f3555de2f84565bc622353607ecb9f",
          "Name": "Curve[]",
          "Description": "Curve[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Elements.Element.Curves",
      "Replication": "Auto",
      "Description": "The Curves in this Element\n\nElement.Curves: Curve[]"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\npuntos_interseccion = []\r\n# Iterar sobre pares únicos de líneas\r\nfor i in range(len(IN[0])):\r\n    for j in range(i + 1, len(IN[0])):\r\n        l1 = IN[0][i]\r\n        l2 = IN[0][j]\r\n        punto_interseccion = l1.Intersect(l2)\r\n        if punto_interseccion:\r\n            puntos_interseccion.append(punto_interseccion[0])\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = puntos_interseccion",
      "Engine": "IronPython2",
      "VariableInputPorts": true,
      "Id": "e03595219eff445b973be39dad27c3e7",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "2f975a1f032041b6b6522f2cf39443b6",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3e0557090957419d949b9efbfa01034b",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "52ce4d62b024409dbd0721aa54818f96",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "57f3f614a30a4374a4fb60c8ef31f3bb",
          "Name": "closedCurve",
          "Description": "Closed curve used as surface boundary\n\nCurve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "dcbaf734481b469599397c0df32412b5",
          "Name": "Surface",
          "Description": "Surface created by patch",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.ByPatch@Autodesk.DesignScript.Geometry.Curve",
      "Replication": "Auto",
      "Description": "Create a Surface by filling in the interior of a closed boundary defined by input Curves.\n\nSurface.ByPatch (closedCurve: Curve): Surface"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Copyright 2019 designtech.io. All rights reserved.\n\"\"\"\nSite Layout Generator\n\"\"\"\n__copyright__ = 'designtech.io 2019'\n__version__ = '1.0.0'\n\nimport clr  \nclr.AddReference('ProtoGeometry')  \nfrom Autodesk.DesignScript.Geometry import * \nclr.AddReference('DSCoreNodes') \nimport DSCore \nfrom DSCore import List  \nimport sys \nimport random \nimport time \nimport math\nimport itertools\nfrom itertools import islice,chain\n\n#INICIA CODIGO AQUI\n\n# custom list splittling definition\ndef splitByLengths( seq, num ): \n        newList = []\n        if sum(num) >= len(seq):\n                min = 0\n                for n in num:\n                        newN = min + n\n                        newList.append(seq[min:newN])\n                        min += n\n        else:\n                num.append(len(seq)-sum(num))\n                min = 0\n                for n in num:\n                        newN = min + n\n                        newList.append(seq[min:newN])\n                        min += n\n        return newList\n\n# Custom surface splitting definition\ndef splitSrf( surface, cutCrv, offsetDist ):  #Inputs of 'surface' (Singular), cutCurve that will slice the\n    #surfaces and an offset distance\n    rebuildCrv = Line.ByStartPointEndPoint( cutCrv.StartPoint, cutCrv.EndPoint )  #Rebuilding the curve as the\n    #origin curve sometimes fails (No idea why)\n    focusPoint = surface.PointAtParameter( 0.5, 0.5 )  #Creating a centroidal point to offset towards with our\n    #splitting line\n    offsetCrv = sorted( [ rebuildCrv.Offset( offsetDist ), rebuildCrv.Offset( -offsetDist ) ], \n    key = lambda x : Geometry.DistanceTo( x, focusPoint ) )[0]  #Creating an offset curve for both the positive\n    #and negative directions, based off our rebuilt curve, then sorting that list based on the Distance To the\n    #focus point (surface point) and from the curve geometry and taking the first value (Closest to our chosen\n    #point)\n    crvLen = offsetCrv.Length  #Calling the Length value of our chosen offset curve (Internal to surface)\n    extendCrv = offsetCrv.ExtendStart( crvLen * 20 ).ExtendEnd( crvLen * 20  )  #Extending the start and end of \n    #our chosen curve by 3 x the length so that no matter the site constraints, we'll push out beyond it. \n    # NOTE: This may not be a viable approach but didn't fail in all prototype options\n    extrudeCrv = extendCrv.Extrude( Vector.ByCoordinates( 0, 0, 1), 500).Translate( 0, 0, -250 )  #We then extrude\n    #our extended curve in the Z-direction up 500 units, then translate that back down by half it's value (-250) as\n    #simply cutting the surface with a 'child' object of that surface (i.e our offset periemter curve) seems to \n    #fail often. So we have to generate a new, non-relational object\n    splitSrf2 = sorted( Geometry.Split( surface, extrudeCrv ), key = lambda x : x.Area )[-1]  #Splitting our surface\n    #using Geometry.Split, and then sorting that list by the Area of the surfaces.\n    # NOTE: This may not be a viable approach and would be better served using another approach\n    [ i.Dispose() for i in [ rebuildCrv, focusPoint, offsetCrv, extendCrv, extrudeCrv ] ]  #Disposing of the \n    #geometry will clear up RAM but is ___SUPER DANGEROUS___ when not used corretly as you can dispose of things not\n    #internal to the Python node but to the Dynamo graph itself. \n    return splitSrf2  #Return the chosen split surface\n\n# Creating a bespoke rounding definition\ndef roundToPrecision( crv, num, precision ):  #Creating a defintion that uses a 'curve', 'number' and 'precison' value\n    return math.floor( ( crv.Length / num ) / precision ) * precision  #Returning a precision value on a custom divided\n    #line. i.e we want to divide our curve by 3 and then precision it to 100\n    #crv.Length = 23078.987, num = 3, precision = 100\n    # (23078.987 / 3) => 7692.995 / 100 => 76.929 * 100 => math.floor(7692.995 ) => 7692\n\n# Creating a Remap-Range Definition\ndef remap( x, nMin, nMax ):  #Just find a C# version or build one to remap the range :) \n    #range check\n    if 0 == 1:\n        print(\"Warning: Zero input range\")\n        return None\n\n    if nMin == nMax:\n        print(\"Warning: Zero output range\")\n        return None\n\n    #check reversed input range\n    reverseInput = False\n    oldMin = min( 0, 1 )\n    oldMax = max( 0, 1 )\n    if not oldMin == 0:\n        reverseInput = True\n\n    #check reversed output range\n    reverseOutput = False   \n    newMin = min( nMin, nMax )\n    newMax = max( nMin, nMax )\n    if not newMin == nMin :\n        reverseOutput = True\n\n    portion = ( x - oldMin ) * ( newMax - newMin ) / ( oldMax - oldMin )\n    if reverseInput:\n        portion = ( oldMax - x ) * ( newMax - newMin ) / ( oldMax - oldMin )\n\n    result = portion + newMin\n    if reverseOutput:\n        result = newMax - portion\n\n    return result\n\n# Splitting up our floors\ndef splitNums( num, floorRange ):  #Creating a custom definition to split up our floor numbers\n    startList = [ random.randint( 0, max( floorRange )) ]  #Creating a list comprehension of\n    #a random integer between zero and the maximum number of our 'floorRange' variabble\n    for n in range( num - 1 ):  #Creating a For Loop across a range from zero to our number minus 1\n        #i.e n = [0, 1, 2] as an xrange object (Generator)\n        _int = random.randint(0, ( max( floorRange ) - sum( startList )) )  #Creating an integer\n        #randomly between zero and our maximum 'floorRange' \n        startList.append(_int)  #Append this random integer to our start list\n    return startList \n    \ndef _flatten(l, result = None):  #Creating a custom flatten function, with a default None (null) result\n    if result is None:  #If the result is None (null) then... \n        result = []  #return an empty list\n    for i in l:  #Otherwise, for index inside of our list-to-flatten\n        if isinstance(i, list):  #If the index item is an instance of the 'list' object\n            _flatten(i, result)  #Then recursively call our custom function on that list, and populate the \n            #'result' variable with it \n        else:  #Otherwise\n            result.append(i)  #Simply append the index to the result\n    return result  #And return the result\n\n# Input Ports\nsurface = IN[0]\nnumOfFloors = IN[1]\nfloorHeight = IN[2]\nsiteBoundary = IN[3]\n\nprecision = 100\nsrfCount = round( remap( random.random(), 2, 5 ) ) \ntowerFloorRange = range( 0, numOfFloors )  \nfloorSplitNums = splitNums( srfCount, towerFloorRange )  \n\ncontador = 0\nwhile 0 in floorSplitNums and contador != 10000:\n    newList = splitNums( srfCount, towerFloorRange )  \n    floorSplitNums = newList \n    contador=contador+1\n\nfloorOffsets = [ ( i * floorHeight ) for i in range( 1, max(towerFloorRange) + 1 ) ]  \nsplitUpperFloors = splitByLengths( floorOffsets, floorSplitNums ) \nsplitUpperFloors[0].insert(0,0)\nfloorZLength = len( splitUpperFloors ) \nbuildingHeight = max( floorOffsets ) + floorHeight  \n\nsrfList = [ surface ]  \nmodeCounter = 0  \nwhile modeCounter < srfCount: \n        crvs = srfList[ modeCounter ].PerimeterCurves()  \n        mode = List.Shuffle( crvs )[0]  \n        if modeCounter == 0:  \n                offsetDist = roundToPrecision(mode, 3, precision)  \n        if modeCounter == 1:\n            offsetDist = roundToPrecision(mode, 4, precision)  \n        if modeCounter == 2:\n            offsetDist = roundToPrecision(mode, 5, precision)  \n        else:\n            offsetDist = roundToPrecision(mode, 8, precision)  \n            \n        srfSplit = splitSrf( srfList[modeCounter], mode, offsetDist ) \n        srfList.append( srfSplit ) \n        \n        [ i.Dispose() for i in crvs ]\n        modeCounter += 1 \n        \nsrfs = srfList \nsAreas = [ ( s.Area / 1000000 ) for s in srfs ]\nOUT = srfs, splitUpperFloors, numOfFloors\n",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "ec14614c246d43518700a9c49af362ab",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "4698a9abd367470c88ea5dda1d8e5b3b",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "84587b3ba65d4166a054a32a75a4262f",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "24281bb5c2cd484aa2092413ba89e041",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fc1094b636cf4ec89bdc69398cee2398",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9ff2a98dfc3244878a1ce630d59b0330",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "09e9d916ccf244cf9ed1b0cb23beab4a",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "dc54629204f44df9b8b51a4ec5cc68ca",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b2ff45b06c654ff381f469168ecaaddd",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7b9307acacb5400ea944377e684f902e",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0fb26d0e7b504165a028c74256d4a832",
          "Name": "",
          "Description": "Value of expression at line 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "x[2];\nx[0];\nx[1];"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "32cb82685ac24c3886579f8c28b95458",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "0079a452a8434f71a3bf8c9772e33d57",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1a624642210c4abfac2577d91fd4bc13",
          "Name": "xTranslation",
          "Description": "Displacement along X-axis.\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8ee563776495462a8b5e13b2ddb48f38",
          "Name": "yTranslation",
          "Description": "Displacement along Y-axis.\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d3712e4c38cb47e5b79d4ed2891a19e3",
          "Name": "zTranslation",
          "Description": "Displacement along Z-axis.\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e6539ef12a924e4e8a5704b556a1c1c0",
          "Name": "Geometry",
          "Description": "Transformed Geometry.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.Translate@double,double,double",
      "Replication": "Auto",
      "Description": "Translates any given geometry by the given displacements in the x, y, and z directions defined in WCS respectively.\n\nGeometry.Translate (xTranslation: double = 0, yTranslation: double = 0, zTranslation: double = 0): Geometry"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "95c58a04375c48ad8db23c0c45b27acb",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "5e9c6f58372d43ffae020fc6fec10ef8",
          "Name": "surface",
          "Description": "Autodesk.DesignScript.Geometry.Surface",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "36a549b5bd9248f9af97c1ae62b2ac4d",
          "Name": "Curve[]",
          "Description": "Curve[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.PerimeterCurves",
      "Replication": "Auto",
      "Description": "Return all the boundary Curves of the Surface.\n\nSurface.PerimeterCurves ( ): Curve[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "5eafbf17498240c29ebc2644c8564525",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "48b698f8cfbc4cd4a74ef15ef232c421",
          "Name": "geometry",
          "Description": "A Solid or Surface that will be tessellated and placed in the Revit model as a DirectShape\n\nGeometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f52e95f1bed94ed49ba079e1e70dea5d",
          "Name": "category",
          "Description": "Must be a top level Built-in Category\n\nCategory",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ebe80fd7ead64c0f908b608c16f9e687",
          "Name": "material",
          "Description": "A Material to apply to the faces of the DirectShape\n\nMaterial\nDefault value : Revit.Elements.DirectShape.DynamoPreviewMaterial",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0b6700471d9745c2b4e6da0a04fcb322",
          "Name": "name",
          "Description": "A string name for the DirectShape\n\nstring\nDefault value : \"DirectShape\"",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "15bdea14db4145599863685a081ba3ad",
          "Name": "DirectShape",
          "Description": "A DirectShape Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Elements.DirectShape.ByGeometry@Autodesk.DesignScript.Geometry.Geometry,Revit.Elements.Category,Revit.Elements.Material,string",
      "Replication": "Auto",
      "Description": "Create a Revit DirectShape given some geometry, a name for the shape, a Category, and Material. The geometry will be tessellated before being placed in the Revit model The category of a DirectShape cannot be changed after creation, so a new DirectShape will be generated if the category input is changed.\n\nDirectShape.ByGeometry (geometry: Geometry, category: Category, material: Material = Revit.Elements.DirectShape.DynamoPreviewMaterial, name: string = \"DirectShape\"): DirectShape"
    },
    {
      "ConcreteType": "DSRevitNodesUI.Categories, DSRevitNodesUI",
      "SelectedIndex": 245,
      "SelectedString": "OST_Floors",
      "Id": "47bfa7b310fd466c943f36475365a688",
      "NodeType": "ExtensionNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "1c440e835c104098a6661be110728923",
          "Name": "Category",
          "Description": "The selected Category.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "All built-in categories."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "df4f2f6b7ca1439e9b71d0d36e90db73",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "398a3dc3813b4b5a9806f15312567584",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "\"Selected Building\";"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "712e9ed18ed7465daa5fa0d98732d069",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "3ab685f0e95b40edbb82656feae91d4f",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cc115337ec7b4d518ca0213a687ebee3",
          "Name": "direction",
          "Description": "Displacement direction.\n\nVector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f3039cb3775f4da9a7fca25faa43fd99",
          "Name": "distance",
          "Description": "Displacement distance along given direction.\n\ndouble",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5232ed63a9f5481aa929de5b060f876a",
          "Name": "Geometry",
          "Description": "Transformed Geometry.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.Translate@Autodesk.DesignScript.Geometry.Vector,double",
      "Replication": "Auto",
      "Description": "Translates any geometry type by the given distance in the given direction.\n\nGeometry.Translate (direction: Vector, distance: double): Geometry"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "11101ee47f41483781353813cd44c2a1",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "46a512d53e614bd88203e5e324908bca",
          "Name": "list",
          "Description": "List to get the last item of\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b75ed8d4022a49be9381e876daaa904a",
          "Name": "item",
          "Description": "Last item in the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.LastItem@var[]..[]",
      "Replication": "Auto",
      "Description": "Retrieves the last item in a list.\n\nList.LastItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "f50e7d8d48bf4d03a15b693c77ec2cb6",
      "NodeType": "FunctionNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "70eb24963a234656a13c27f0b21b8e6b",
          "Name": "Vector",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Vector.ZAxis",
      "Replication": "Auto",
      "Description": "Get the canonical Z axis Vector (0,0,1)\n\nVector.ZAxis ( ): Vector"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "4fc7b3d1e8ac4aa99617ec3a075008cf",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "b1b8793b5c0e4251b18092daedb539a7",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "450766dd0cb64dd284afb50e58c51aef",
          "Name": "distance",
          "Description": "Distance to extrude\n\ndouble\nDefault value : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "783b8de8cbd74c2c81e74e9691ca3db2",
          "Name": "Solid",
          "Description": "The extruded Solid",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.ExtrudeAsSolid@double",
      "Replication": "Auto",
      "Description": "Extrudes a Curve in the Normal direction by the specified distance. Curve must be closed.\n\nCurve.ExtrudeAsSolid (distance: double = 1): Solid"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "babd079374f14a37a54eca0211a36621",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "fd8bd6186c084db88b1375693731c71a",
          "Name": "list",
          "Description": "The list the element will be inserted to\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "1a9dd40ac6c5491da98b89c8449310a1",
          "Name": "element",
          "Description": "The element to be inserted\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "3bfe93ce081f4b25a5203bc6369e7529",
          "Name": "index",
          "Description": "Specifies the location in the list of the element to be inserted\n\nint",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ebbb1d19c3604627b920622a15faa33a",
          "Name": "list",
          "Description": "List with the element inserted",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Insert@var[]..[],var[]..[],int",
      "Replication": "Auto",
      "Description": "Inserts an element into a list at specified index.\n\nList.Insert (list: var[]..[], element: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "191e489788b8469e86c33e4fed7fb9bf",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c07d1972b90b494ab7c2971a189a2b54",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "250;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "f6ea33ab01414876aa67715f3dac756e",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "47efb4ecdf094a80b30085b5e0ef7bd1",
          "Name": "",
          "Description": "white",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ffac9d895b5147fab7f4df51b80ea91a",
          "Name": "",
          "Description": "glass",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "white = DSCore.Color.ByARGB(255,255,255,255);\nglass = DSCore.Color.ByARGB(150,60,145,190);"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "f0c147462d474e4aaa9a52247c8debdd",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "bcaa2b4fcf784f07909f38e0a44cdace",
          "Name": "geometry",
          "Description": "The geometry to which you would like to apply color.\n\nGeometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "caee73464f4c4d9bb45c87325d60da6f",
          "Name": "color",
          "Description": "The color.\n\nColor",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "010fbb910258414d9f8d0398e2f76f58",
          "Name": "GeometryColor",
          "Description": "A Display object.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Modifiers.GeometryColor.ByGeometryColor@Autodesk.DesignScript.Geometry.Geometry,DSCore.Color",
      "Replication": "Auto",
      "Description": "Display geometry using a color.\n\nGeometryColor.ByGeometryColor (geometry: Geometry, color: Color): GeometryColor"
    },
    {
      "ConcreteType": "Watch3DNodeModels.Watch3D, Watch3DNodeModels",
      "WatchWidth": 200.0,
      "WatchHeight": 200.0,
      "WasExecuted": true,
      "Camera": {
        "Name": "778a3679-02c6-4c3a-8325-0e2860e06a81 Preview",
        "EyeX": -13.76898585701293,
        "EyeY": 20.499734678430677,
        "EyeZ": 34.38343164222918,
        "LookX": 8.76898585701293,
        "LookY": -9.499734678430677,
        "LookZ": -42.38343164222918,
        "UpX": 0.0,
        "UpY": 1.0,
        "UpZ": 0.0
      },
      "VariableInputPorts": true,
      "Id": "778a367902c64c3a83250e2860e06a81",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "ac73bda09dbe465280f54511fff5d6d8",
          "Name": "",
          "Description": "Incoming geometry objects.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d0fbc161a8b9452984c17fcaff2f53e7",
          "Name": "",
          "Description": "Incoming geometry objects.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Shows a dynamic preview of geometry"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "78b1140accbb44a3bc0bde121d3155b2",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "71698210e8c5411cb86c510dae1634d9",
          "Name": "crossSections",
          "Description": "Curve[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e037873a28c941e8a3db3d0bc8dec2d0",
          "Name": "Solid",
          "Description": "Solid",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Solid.ByLoft@Autodesk.DesignScript.Geometry.Curve[]",
      "Replication": "Auto",
      "Description": "Create a Solid by lofting between input cross section closed Curves.\n\nSolid.ByLoft (crossSections: Curve[]): Solid"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "44e0777c4c174d37a345bc13ded7a4bb",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "d03d85f394cd4dc5a20a0c69e807b863",
          "Name": "solids",
          "Description": "A collection of solids\n\nSolid[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b2808e142b0c486292ec5e2fbfd952d7",
          "Name": "Solid",
          "Description": "Solid",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Solid.ByUnion@Autodesk.DesignScript.Geometry.Solid[]",
      "Replication": "Auto",
      "Description": "Union a collection of solids into one solid\n\nSolid.ByUnion (solids: Solid[]): Solid"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "252b196632444532be5cf44ea83b4cc1",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "e70a2d5034d4441ba26a1146621ab1de",
          "Name": "geometry",
          "Description": "The geometry to which you would like to apply color.\n\nGeometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f4c197763aeb4bfdbbf1e721cefbb9ef",
          "Name": "color",
          "Description": "The color.\n\nColor",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2a24e19eb24e4be4bb825e421a94b13d",
          "Name": "GeometryColor",
          "Description": "A Display object.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Modifiers.GeometryColor.ByGeometryColor@Autodesk.DesignScript.Geometry.Geometry,DSCore.Color",
      "Replication": "Auto",
      "Description": "Display geometry using a color.\n\nGeometryColor.ByGeometryColor (geometry: Geometry, color: Color): GeometryColor"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "eeaa6656996549509254bb9c4a704fc9",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "5757aa2dd85a45c4beaa6b143467ecbd",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ab53f9c2e79d4e01b4985b58d15c5623",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "49397cd9043443b2830e4befbddc74ee",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "16860b9106204376810d2db8ae1ec35d",
          "Name": "name",
          "Description": "The name of the material\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "199e89b3bf5b42ddab2903427428ad32",
          "Name": "Material",
          "Description": "Material",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Elements.Material.ByName@string",
      "Replication": "Auto",
      "Description": "Select a material from the current document by the name\n\nMaterial.ByName (name: string): Material"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "4ae9931f71054603a96fb08d5c6cf07a",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "fadbb14b074540c48ace9737e2bd6625",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "\"Default\";"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "7a30ca81227c49ceaf7fa4596780d8ec",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "57157437b9f94e6097bbdecd685eb448",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7dd4f5d932694618b513161e103394f0",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "39709824685f4a97a4a34134e1ab32d4",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "5350b11f455947c8a803f967fca1ea45",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "670f713e8c244c99ba2aa75870db5533",
          "Name": "surface",
          "Description": "Autodesk.DesignScript.Geometry.Surface",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "016f8ea31f674027bfe9e7c9de2851f7",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.Area",
      "Replication": "Auto",
      "Description": "Returns the total surface area.\n\nSurface.Area: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "3b09c164f3824d0db8e3f90eb85df866",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "61ad4dfa1b2d4a419d594f9fe008533a",
          "Name": "surface",
          "Description": "Autodesk.DesignScript.Geometry.Surface",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2b32e26749a745dcb60a2e83d45f597d",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.Area",
      "Replication": "Auto",
      "Description": "Returns the total surface area.\n\nSurface.Area: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "764ffbe251cf43ce9dd2b5f855d0e534",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "0833f0e7bca24a3b997f9660b4acf88c",
          "Name": "surface",
          "Description": "Autodesk.DesignScript.Geometry.Surface",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "906e3a4846cc4d289b1639fd4a6830af",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.Area",
      "Replication": "Auto",
      "Description": "Returns the total surface area.\n\nSurface.Area: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "0ea720bac6d04c879829f377132a0d49",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "29eb9cc179d143389d4cd622ce1fc31c",
          "Name": "site",
          "Description": "site",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d3dbab31038644c4916c785346e6817f",
          "Name": "bldg",
          "Description": "bldg",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3a90947f6e4841fdb6d8272df34a5026",
          "Name": "",
          "Description": "pr",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4596ee07fb7443a28cc40c5d1341a66b",
          "Name": "",
          "Description": "prc",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "pr = (site-bldg);\nprc = Math.Round((bldg/site)*100);"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "b2437c259ea641c4b05aaf6df3ca5a7e",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "5aecdaedb6a64bb0a66b38c7e1d22b62",
          "Name": "values",
          "Description": "Numbers to add to sum\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1f25befa0b2b4bed9b0a8eadd088dcc7",
          "Name": "double",
          "Description": "The sum of the values",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Find the sum of a series of numbers\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "e34109a9dd7e4b4c8cbc248e46b111cc",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "f7a07f4192eb459eac350d4b25299cea",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "40dddab9a2464037ad25978f9cb14c1c",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "Math.Round(x/1000000);"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "import clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\nimport math\r\n\r\nnFloors = IN[0]\r\nbuildingTotalArea = IN[1]\r\n\r\nliftProvision = (buildingTotalArea*(-0.18))/(nFloors-47.5)\r\n\r\nOUT = abs(liftProvision)",
      "Engine": "IronPython2",
      "VariableInputPorts": true,
      "Id": "1a080fdcac814227b47876ea4de13193",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "4f3a9be5d6ad454387a32b1fd73fcdd2",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3ac4936a297f4dbdadd4e07a61d57d28",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "396d1a023eca4647b353114a145ce489",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "WatchWidth": 35.0,
      "WatchHeight": 38.0,
      "Id": "a4af0f9b3c1e4fa5bb14c6fc2cdd5b11",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "fc8b6ca372bc4747892abaf56c7a0254",
          "Name": "",
          "Description": "Node to evaluate.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "18524b0e6dbd4a80ad005964efd749a3",
          "Name": "",
          "Description": "Watch contents.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualizes a node's output"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "WatchWidth": 50.0,
      "WatchHeight": 38.0,
      "Id": "3e49e21ee498433380492bb86bc19b75",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "39afe2d97cef47b3b2f4a931884b1cd6",
          "Name": "",
          "Description": "Node to evaluate.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ef179c57431b48b780a016ef25e1ab66",
          "Name": "",
          "Description": "Watch contents.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualizes a node's output"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "WatchWidth": 42.0,
      "WatchHeight": 38.0,
      "Id": "dd272abab5944397b5cf7c5203dcdf3a",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "dd2e9430bb5940ecbedacc598506f38a",
          "Name": "",
          "Description": "Node to evaluate.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e914254690c046a59177f3d08cd2d71a",
          "Name": "",
          "Description": "Watch contents.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualizes a node's output"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\n\r\nareaTerreno = IN[0]\r\ntodosPisos = IN[1]\r\n\r\nareaTotal = areaTerreno * len(todosPisos) / 1000000\r\n# Assign your output to the OUT variable.\r\nOUT = areaTotal",
      "Engine": "IronPython2",
      "VariableInputPorts": true,
      "Id": "d70d39a5a1934922890056e140a12b3e",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "8309a0b8b693449fb0e6c6a2e572e088",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7bd377f3304545eb83f19a3ebcea9ca3",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b06fa52fca534ceea752d6409ac2e630",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "9fb6e589d3f64835bf9e2209ffc9494b",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "ee6e94c8e927402284efb4d69b3802d6",
          "Name": "atc",
          "Description": "atc",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "914436e92d0a4cc4a73676c784ee6054",
          "Name": "att",
          "Description": "att",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c55ea6b249dd441fbae0094dd8a3bdad",
          "Name": "",
          "Description": "CUS",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "CUS = Math.Round(atc/att * 100,2);"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "WatchWidth": 65.0,
      "WatchHeight": 38.0,
      "Id": "c1904ac21c684606b098adbd267a484c",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "f8355440159d415a90235d397bdc11d1",
          "Name": "",
          "Description": "Node to evaluate.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4337dea769af4734a2cbe75d177ff184",
          "Name": "",
          "Description": "Watch contents.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualizes a node's output"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "WatchWidth": 58.0,
      "WatchHeight": 38.0,
      "Id": "d74af90ff7e2488d893614cd0e3bccbc",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "083de43c11ea46adac2196eef9c791f9",
          "Name": "",
          "Description": "Node to evaluate.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ad7a4c02f11641f69fcfb54cb7fa5aa8",
          "Name": "",
          "Description": "Watch contents.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualizes a node's output"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "2f707b6444db4dc2a55b7a8bcef0f04b",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "d61c8cef2ef94252ad2d1c44c616409a",
          "Name": "curves",
          "Description": "Curves to join into polycurve\n\nCurve[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4a9c6b415ce144a2b5ed53fbc338e0b3",
          "Name": "joinTolerance",
          "Description": "Tolerance to determine size of gap allowed between curves to be joined\n\ndouble\nDefault value : 0.001",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c57caeb859544e0aa912b28a4f03e2ce",
          "Name": "trimCurves",
          "Description": "bool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a35147e3ba464c4fb90b3cf9a1c66806",
          "Name": "trimLength",
          "Description": "double\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5dfe3ceceddf41c2870480883d67b302",
          "Name": "PolyCurve",
          "Description": "Polycurve created by joined curves",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.PolyCurve.ByJoinedCurves@Autodesk.DesignScript.Geometry.Curve[],double,bool,double",
      "Replication": "Auto",
      "Description": "Make PolyCurve by joining curves. Flips curve as needed for connectivity. Choose a preferred join tolerance between 1e-6 and 1e-3 units.\n\nPolyCurve.ByJoinedCurves (curves: Curve[], joinTolerance: double = 0.001, trimCurves: bool = false, trimLength: double = 0): PolyCurve"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "cb6a7d46d0414a17affe75ff385a029e",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "79a1153f77dc48969040ebabaab57cb3",
          "Name": "curves",
          "Description": "Curves to join into polycurve\n\nCurve[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "71e04b34761540be9f2ac4803a9e9949",
          "Name": "joinTolerance",
          "Description": "Tolerance to determine size of gap allowed between curves to be joined\n\ndouble\nDefault value : 0.001",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b0752526932f4d649af2db893dd126f5",
          "Name": "trimCurves",
          "Description": "bool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "77c52b9b00af4f498f24eb1df09e02a2",
          "Name": "trimLength",
          "Description": "double\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cc82ad56aeeb4fc7910bc0fe761686ad",
          "Name": "PolyCurve",
          "Description": "Polycurve created by joined curves",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.PolyCurve.ByJoinedCurves@Autodesk.DesignScript.Geometry.Curve[],double,bool,double",
      "Replication": "Auto",
      "Description": "Make PolyCurve by joining curves. Flips curve as needed for connectivity. Choose a preferred join tolerance between 1e-6 and 1e-3 units.\n\nPolyCurve.ByJoinedCurves (curves: Curve[], joinTolerance: double = 0.001, trimCurves: bool = false, trimLength: double = 0): PolyCurve"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "2ede5af835fe4ba99a06d3905bd93106",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "3d7cd5f498a143f789b9511a63456b24",
          "Name": "curves",
          "Description": "Curves to join into polycurve\n\nCurve[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b6ca060059ad489fa5e7a17f3807b6ed",
          "Name": "joinTolerance",
          "Description": "Tolerance to determine size of gap allowed between curves to be joined\n\ndouble\nDefault value : 0.001",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c4df48f7ed414b26add2a9a494e9bcb8",
          "Name": "trimCurves",
          "Description": "bool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9004d428bf304d74bd641337aab8484d",
          "Name": "trimLength",
          "Description": "double\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1a63f4f7745b45edb3d87dd99fb6cfe9",
          "Name": "PolyCurve",
          "Description": "Polycurve created by joined curves",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.PolyCurve.ByJoinedCurves@Autodesk.DesignScript.Geometry.Curve[],double,bool,double",
      "Replication": "Auto",
      "Description": "Make PolyCurve by joining curves. Flips curve as needed for connectivity. Choose a preferred join tolerance between 1e-6 and 1e-3 units.\n\nPolyCurve.ByJoinedCurves (curves: Curve[], joinTolerance: double = 0.001, trimCurves: bool = false, trimLength: double = 0): PolyCurve"
    },
    {
      "ConcreteType": "CoreNodeModels.Logic.RefactoredIf, CoreNodeModels",
      "Id": "b80d3af423a44ad08b0229f54ccddca6",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "bbaac8493b584191a88bc808155f464d",
          "Name": "test",
          "Description": "Boolean test",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "40e332e701104179bde152c8ab956b1e",
          "Name": "true",
          "Description": "Returned if test is true",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ded456b86eeb4ec0b1112a55ce0cacec",
          "Name": "false",
          "Description": "Returned if test is false",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8755300ee9ff4773b6f0aea3a7e9f257",
          "Name": "result",
          "Description": "Result block produced",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the result of either True or False input depending on what boolean value is toggled in the test input. Supports recursion which requires that only a single branch be executed. It's critical that that both True and False branches are isolated and do not interact with each other!"
    },
    {
      "ConcreteType": "Dynamo.Nodes.DSModelElementsSelection, DSRevitNodesUI",
      "NodeType": "ExtensionNode",
      "InstanceId": [
        "8cbb9fc6-1717-4ae0-80b0-205c986cbd23-000011ab",
        "8cbb9fc6-1717-4ae0-80b0-205c986cbd23-00001209",
        "8cbb9fc6-1717-4ae0-80b0-205c986cbd23-00001247",
        "8cbb9fc6-1717-4ae0-80b0-205c986cbd23-00001273"
      ],
      "Id": "efe4e9d5f67c4a6894afc2282977fc24",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "33aecd55e2e048b5bf2ab9b1f06fa8a3",
          "Name": "Elements",
          "Description": "The selected elements.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Select multiple elements from the Revit document."
    },
    {
      "ConcreteType": "CoreNodeModels.Logic.Gate, CoreNodeModels",
      "InputValue": false,
      "Id": "aedb17b190cf4adc9441de2f3554573e",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "54ed832f0528406b80089c02bb4472db",
          "Name": ">",
          "Description": "Data to pass to a downstream node with gated controls.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "904e172564744f74baefa176a8d89c8d",
          "Name": ">",
          "Description": "Data",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Block data passing through this node to downstream nodes. Node returns the input data only if the node value is set to Open.\r\n\r\nIn Generative Design workflows, this node should be used to control and block the behavior of nodes that will place elements in Revit"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "3545939b1f8542b3bed12123c59e1477",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "5c86de703dca4bdba761ba81849ee396",
          "Name": "y",
          "Description": "y",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "053afe9a69114121949146543a86c4cd",
          "Name": "",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "x = Math.Round(y,2);"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "e04a719a68924b5a94e9de1c742a9cb9",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "b4f0392ee0ed479b9f5f73eec53f701b",
          "Name": "y",
          "Description": "y",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f9cfd971f625459988f36e183e338fb0",
          "Name": "",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "x = Math.Round(y,2);"
    },
    {
      "ConcreteType": "CoreNodeModels.Remember, CoreNodeModels",
      "Cache": "[[{\"range\":{\"high\":1.1384514435695534,\"low\":0.0,\"type\":\"Finite\"},\"position\":{\"x\":3316.406067826076,\"y\":-21278.6542830621,\"z\":0.0},\"direction\":{\"x\":34699.999999999985,\"y\":-1.1084466677857563E-10,\"z\":0.0},\"ConcreteTypeid\":\"autodesk.geometry.curve:line-1.0.0\"}],[{\"range\":{\"high\":0.8202099737532808,\"low\":0.0,\"type\":\"Finite\"},\"position\":{\"x\":38016.406067826065,\"y\":-21278.654283062213,\"z\":0.0},\"direction\":{\"x\":7.389644451905042E-11,\"y\":24999.999999999996,\"z\":0.0},\"ConcreteTypeid\":\"autodesk.geometry.curve:line-1.0.0\"}],[{\"range\":{\"high\":1.1384514435695543,\"low\":0.0,\"type\":\"Finite\"},\"position\":{\"x\":38016.40606782614,\"y\":3721.345716937786,\"z\":0.0},\"direction\":{\"x\":-34700.000000000015,\"y\":1.1226575225009583E-10,\"z\":0.0},\"ConcreteTypeid\":\"autodesk.geometry.curve:line-1.0.0\"}],[{\"range\":{\"high\":0.8202099737532809,\"low\":0.0,\"type\":\"Finite\"},\"position\":{\"x\":3316.4060678261167,\"y\":3721.3457169378985,\"z\":0.0},\"direction\":{\"x\":-4.050093593832571E-11,\"y\":-25000.000000000004,\"z\":0.0},\"ConcreteTypeid\":\"autodesk.geometry.curve:line-1.0.0\"}]]",
      "Id": "2f5eba3cd1d8439699cc41d171326418",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "2b14dc66a1c243beb7f3f429d393532a",
          "Name": ">",
          "Description": "Data to sample and store in the file.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a0e6c52e9bc54b2480ce625684292bf3",
          "Name": ">",
          "Description": "Data",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Store data passing through this node to the Dynamo file. Return the stored data if the input is null."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.Filename, CoreNodeModels",
      "Id": "54a757f470a948e095350107d443356c",
      "NodeType": "ExtensionNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "4b7f29ea12784ffb816032b4933b7174",
          "Name": "",
          "Description": "File Path",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows you to select a file on the system and returns its file path",
      "HintPath": "Z:\\dynamos\\Building Mass Generator V1 FINAL.Dependencies\\files\\NORMATIVA SIN EL CENTRO - RESTRICCIONES.csv",
      "InputValue": "Z:\\dynamos\\Building Mass Generator V1 FINAL.Dependencies\\files\\NORMATIVA SIN EL CENTRO - RESTRICCIONES.csv"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "2e512c18f3aa487da8e61b35e127b864",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "63181f4590d4406a81c48204e4ab6766",
          "Name": "filePath",
          "Description": "string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "594338ac4e744993af81ab998e8164bc",
          "Name": "transpose",
          "Description": "bool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e026ae7be4e743efa988837d738b7990",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSOffice.Data.ImportCSV@string,bool",
      "Replication": "Auto",
      "Description": "Data.ImportCSV (filePath: string, transpose: bool = false): var[]..[]"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nimport pandas as pd\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n#codigo propio\r\ndef lista_a_dataframe(lista):\r\n    # Extrae el nombre de las columnas\r\n    columnas = [sublista[0] for sublista in lista]\r\n    # Extrae los valores de las columnas\r\n    valores = [sublista[1:] for sublista in lista]\r\n\r\n    # Transpone la lista de valores para que cada fila sea una lista de valores\r\n    valores_transpuestos = list(map(list, zip(*valores)))\r\n\r\n    # Crea el DataFrame\r\n    df = pd.DataFrame(valores_transpuestos, columns=columnas)\r\n    return df\r\n# Devolver las columnas después de filtrar\r\n\r\ndef incluye_rango(rango, cantidad):\r\n    if isinstance(rango, str) and '-' in rango:\r\n        inicio, fin = map(int, rango.split('-'))\r\n        return inicio <= cantidad <= fin\r\n    else:\r\n        return int(rango) == cantidad\r\n\r\ndef calcular_salida(filas_sin_f_pisos, filas_con_f_pisos):\r\n    if len(filas_con_f_pisos)>0:\r\n        return filas_con_f_pisos[0][6:9]\r\n    elif len(filas_sin_f_pisos)>0:\r\n        return filas_sin_f_pisos[-1][6:9]\r\n    else:\r\n        return None\r\ndf = lista_a_dataframe(IN[0])\r\nareaTerreno = IN[1]/1000000\r\ntamanioFrente = IN[2][0][0].Direction.Length/1000\r\ncodigo = str(IN[3])\r\ncantidadPisos = IN[4]\r\nalturaPisos = IN[5]\r\n# Filtrar el DataFrame por el código dado\r\ndf_filtrado = df[df['CODIGO'] == codigo]\r\n\r\n# Filtrar por el frente mínimo\r\ndf_filtrado = df_filtrado[df_filtrado['FRENTE MINIMO (m)'] <= tamanioFrente]\r\n\r\n# Filtrar por el área mínima del lote\r\ndf_filtrado = df_filtrado[df_filtrado['LOTE MINIMO (m2)'] <= areaTerreno]\r\n\r\ncolumnas_finales = df_filtrado.dropna(axis=1)\r\n\r\nif columnas_finales.empty:\r\n    resultado = 0\r\nelif \"m\" not in columnas_finales.head(1)['ALTURA EN PISOS'].to_list()[0]:\r\n    # Filtrar el DataFrame por la cantidad de pisos\r\n    df_filtrado_pisos = columnas_finales[columnas_finales['ALTURA EN PISOS'].apply(lambda x: incluye_rango(x, cantidadPisos))]\r\n\r\n    if len(df_filtrado_pisos) > 0:\r\n        columnas_finales_lista = [x*1000 for x in df_filtrado_pisos.values.tolist()[0][6:9]]\r\n        resultado = [columnas_finales_lista[0],columnas_finales_lista[1],columnas_finales_lista[2],columnas_finales_lista[1]]\r\n    elif len(columnas_finales) > 0:\r\n        columnas_finales_aux = [x*1000 for x in columnas_finales.values.tolist()[-1][6:9]]\r\n        \r\n        cadena = str(columnas_finales.values.tolist()[-1][1])\r\n        numeros = cadena.split(\"-\")\r\n        if len(numeros) > 1:\r\n            resultado = [columnas_finales_aux[0],columnas_finales_aux[1],columnas_finales_aux[2],columnas_finales_aux[1],int(numeros[1])]\r\n        else:\r\n            resultado = [columnas_finales_aux[0],columnas_finales_aux[1],columnas_finales_aux[2],columnas_finales_aux[1],int(cadena)]\r\n    else:\r\n        resultado = 0\r\nelse:\r\n    df_to_list = columnas_finales.values.tolist()\r\n    alturaSinM = df_to_list[0][1].split(\"m\")[0]\r\n    cantidaPisosAuxCreado =int( int(alturaSinM)/alturaPisos)\r\n    resultado = [df_to_list[0][6]*1000,df_to_list[0][7]*1000,df_to_list[0][8]*1000,df_to_list[0][7]*1000, cantidaPisosAuxCreado]\r\n# Assign your output to the OUT variable.\r\nOUT = resultado",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "4c95da1afd4643af8b7e96f6e9cc3a0b",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "3b09acce26df4b7a98c1ab86ff80c24d",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "18539037e89b4aee97e22b456ec7c30c",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6d64413398714a61b97f5aefe70f87fc",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6fef9e00edc14ed3a6027e5b4d197d15",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e81435a9c54e46d7bf162236b223ec3b",
          "Name": "IN[4]",
          "Description": "Input #4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "371841a094ac4fa09ce87c64ed796c26",
          "Name": "IN[5]",
          "Description": "Input #5",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "90bdd687698948c09f7b746776d02618",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.CustomSelection, CoreNodeModels",
      "SerializedItems": [
        {
          "Name": "E-1",
          "Item": "E-1"
        },
        {
          "Name": "E-2",
          "Item": "E-2"
        },
        {
          "Name": "E-3",
          "Item": "E-3"
        },
        {
          "Name": "E-4",
          "Item": "E-4"
        },
        {
          "Name": "E-5",
          "Item": "E-5"
        },
        {
          "Name": "E-6",
          "Item": "E-6"
        },
        {
          "Name": "E-7",
          "Item": "E-7"
        },
        {
          "Name": "E-8",
          "Item": "E-8"
        },
        {
          "Name": "E-9",
          "Item": "E-9"
        },
        {
          "Name": "E-10",
          "Item": "E-10"
        },
        {
          "Name": "E-11",
          "Item": "E-11"
        },
        {
          "Name": "E-12",
          "Item": "E-12"
        },
        {
          "Name": "E-13",
          "Item": "E-13"
        },
        {
          "Name": "E-14",
          "Item": "E-14"
        },
        {
          "Name": "E-15",
          "Item": "E-15"
        },
        {
          "Name": "E-16",
          "Item": "E-16"
        },
        {
          "Name": "E-17",
          "Item": "E-17"
        },
        {
          "Name": "E-18",
          "Item": "E-18"
        },
        {
          "Name": "E-19",
          "Item": "E-19"
        },
        {
          "Name": "E-20",
          "Item": "E-20"
        },
        {
          "Name": "E-21",
          "Item": "E-21"
        },
        {
          "Name": "E-22",
          "Item": "E-22"
        },
        {
          "Name": "E-23",
          "Item": "E-23"
        },
        {
          "Name": "E-24",
          "Item": "E-24"
        },
        {
          "Name": "E-25",
          "Item": "E-25"
        },
        {
          "Name": "E-26",
          "Item": "E-26"
        },
        {
          "Name": "E-27",
          "Item": "E-27"
        },
        {
          "Name": "E-28",
          "Item": "E-28"
        },
        {
          "Name": "E-29",
          "Item": "E-29"
        },
        {
          "Name": "E-30",
          "Item": "E-30"
        },
        {
          "Name": "E-31",
          "Item": "E-31"
        },
        {
          "Name": "E-32",
          "Item": "E-32"
        },
        {
          "Name": "E-33",
          "Item": "E-33"
        },
        {
          "Name": "E-34",
          "Item": "E-34"
        },
        {
          "Name": "EJIDO-2",
          "Item": "EJIDO-2"
        },
        {
          "Name": "EJIDO-3",
          "Item": "EJIDO-3"
        },
        {
          "Name": "EJIDO-4",
          "Item": "EJIDO-4"
        },
        {
          "Name": "O-1",
          "Item": "O-1"
        },
        {
          "Name": "O-2",
          "Item": "O-2"
        },
        {
          "Name": "O-3",
          "Item": "O-3"
        },
        {
          "Name": "O-4",
          "Item": "O-4"
        },
        {
          "Name": "O-5",
          "Item": "O-5"
        },
        {
          "Name": "O-6",
          "Item": "O-6"
        },
        {
          "Name": "O-7",
          "Item": "O-7"
        },
        {
          "Name": "O-8",
          "Item": "O-8"
        },
        {
          "Name": "O-9",
          "Item": "O-9"
        },
        {
          "Name": "O-10",
          "Item": "O-10"
        },
        {
          "Name": "O-11",
          "Item": "O-11"
        },
        {
          "Name": "O-12",
          "Item": "O-12"
        },
        {
          "Name": "O-13",
          "Item": "O-13"
        },
        {
          "Name": "O-14",
          "Item": "O-14"
        },
        {
          "Name": "O-15",
          "Item": "O-15"
        },
        {
          "Name": "O-16",
          "Item": "O-16"
        },
        {
          "Name": "O-17",
          "Item": "O-17"
        },
        {
          "Name": "O-18",
          "Item": "O-18"
        },
        {
          "Name": "O-19",
          "Item": "O-19"
        },
        {
          "Name": "0-20",
          "Item": "O-20"
        },
        {
          "Name": "O-21",
          "Item": "O-21"
        },
        {
          "Name": "O-22",
          "Item": "O-22"
        },
        {
          "Name": "O-23",
          "Item": "O-23"
        },
        {
          "Name": "O-24",
          "Item": "O-24"
        },
        {
          "Name": "O-25",
          "Item": "O-25"
        },
        {
          "Name": "O-26",
          "Item": "O-26"
        },
        {
          "Name": "O-27",
          "Item": "O-27"
        },
        {
          "Name": "O-28",
          "Item": "O-28"
        },
        {
          "Name": "UP-BAN-1",
          "Item": "UP-BAN-1"
        },
        {
          "Name": "UP-BAN-3",
          "Item": "UP-BAN-3"
        },
        {
          "Name": "UP-BAN-4",
          "Item": "UP-BAN-4"
        },
        {
          "Name": "UP-BAN-5",
          "Item": "UP-BAN-5"
        },
        {
          "Name": "UP-BAN-7",
          "Item": "UP-BAN-7"
        },
        {
          "Name": "UP-BAN-8",
          "Item": "UP-BAN-8"
        },
        {
          "Name": "UP-BAN-9",
          "Item": "UP-BAN-9"
        },
        {
          "Name": "UP-BAN-10",
          "Item": "UP-BAN-10"
        },
        {
          "Name": "UP-BAN-11",
          "Item": "UP-BAN-11"
        },
        {
          "Name": "UP-BAN-12",
          "Item": "UP-BAN-12"
        },
        {
          "Name": "UP-CHA-1",
          "Item": "UP-CHA-1"
        },
        {
          "Name": "UP-CHE-1",
          "Item": "UP-CHE-1"
        },
        {
          "Name": "UP-CHI-1",
          "Item": "UP-CHI-1"
        },
        {
          "Name": "UP-CHI-2",
          "Item": "UP-CHI-2"
        },
        {
          "Name": "UP-CHI-3",
          "Item": "UP-CHI-3"
        },
        {
          "Name": "UP-CHI-4",
          "Item": "UP-CHI-4"
        },
        {
          "Name": "UP-CHI-5",
          "Item": "UP-CHI-5"
        },
        {
          "Name": "UP-CUM-1",
          "Item": "UP-CUM-1"
        },
        {
          "Name": "UP-ELV-1",
          "Item": "UP-ELV-1"
        },
        {
          "Name": "UP-ELV-2",
          "Item": "UP-ELV-2"
        },
        {
          "Name": "UP-ELV-3",
          "Item": "UP-ELV-3"
        },
        {
          "Name": "UP-ELV-4",
          "Item": "UP-ELV-4"
        },
        {
          "Name": "UP-LLA-1",
          "Item": "UP-LLA-1"
        },
        {
          "Name": "UP-LLA-2",
          "Item": "UP-LLA-2"
        },
        {
          "Name": "UP-LLA-3",
          "Item": "UP-LLA-3"
        },
        {
          "Name": "UP-MOL-1",
          "Item": "UP-MOL-1"
        },
        {
          "Name": "UP-NUL-1",
          "Item": "UP-NUL-1"
        },
        {
          "Name": "UP-NUL-2",
          "Item": "UP-NUL-2"
        },
        {
          "Name": "UP-NUL-3",
          "Item": "UP-NUL-3"
        },
        {
          "Name": "UP-NUL-4",
          "Item": "UP-NUL-4"
        },
        {
          "Name": "UP-OCP-1",
          "Item": "UP-OCP-1"
        },
        {
          "Name": "UP-QUI-1",
          "Item": "UP-QUI-1"
        },
        {
          "Name": "UP-RIC-1",
          "Item": "UP-RIC-1"
        },
        {
          "Name": "UP-RIC-2",
          "Item": "UP-RIC-2"
        },
        {
          "Name": "UP-RIC-3",
          "Item": "UP-RIC-3"
        },
        {
          "Name": "UP-RIC-4",
          "Item": "UP-RIC-4"
        },
        {
          "Name": "UP-RIC-5",
          "Item": "UP-RIC-5"
        },
        {
          "Name": "UP-RIC-6",
          "Item": "UP-RIC-6"
        },
        {
          "Name": "UP-RIC-7",
          "Item": "UP-RIC-7"
        },
        {
          "Name": "UP-RIC-8",
          "Item": "UP-RIC-8"
        },
        {
          "Name": "UP-RIC-9",
          "Item": "UP-RIC-9"
        },
        {
          "Name": "UP-RIC-10",
          "Item": "UP-RIC-10"
        },
        {
          "Name": "UP-RIC-11",
          "Item": "UP-RIC-11"
        },
        {
          "Name": "UP-RIC-12",
          "Item": "UP-RIC-12"
        },
        {
          "Name": "UP-SAN-1",
          "Item": "UP-SAN-1"
        },
        {
          "Name": "UP-SAN-2",
          "Item": "UP-SAN-2"
        },
        {
          "Name": "UP-SAN-3",
          "Item": "UP-SAN-3"
        },
        {
          "Name": "UP-SAN-4",
          "Item": "UP-SAN-4"
        },
        {
          "Name": "UP-SAY-1",
          "Item": "UP-SAY-1"
        },
        {
          "Name": "UP-SAY-2",
          "Item": "UP-SAY-2"
        },
        {
          "Name": "UP-SAY-3",
          "Item": "UP-SAY-3"
        },
        {
          "Name": "UP-SAY-6",
          "Item": "UP-SAY-6"
        },
        {
          "Name": "UP-SID-1",
          "Item": "UP-SID-1"
        },
        {
          "Name": "UP-SIN-1",
          "Item": "UP-SIN-1"
        },
        {
          "Name": "UP-SIN-2",
          "Item": "UP-SIN-2"
        },
        {
          "Name": "UP-SIN-3",
          "Item": "UP-SIN-3"
        },
        {
          "Name": "UP-SIN-4",
          "Item": "UP-SIN-4"
        },
        {
          "Name": "UP-SIN-5",
          "Item": "UP-SIN-5"
        },
        {
          "Name": "UP-SIN-6",
          "Item": "UP-SIN-6"
        },
        {
          "Name": "UP-SIN-7",
          "Item": "UP-SIN-7"
        },
        {
          "Name": "UP-SIN-8",
          "Item": "UP-SIN-8"
        },
        {
          "Name": "UP-SIN-9",
          "Item": "UP-SIN-9"
        },
        {
          "Name": "UP-SIN-10",
          "Item": "UP-SIN-10"
        },
        {
          "Name": "UP-SIN-11",
          "Item": "UP-SIN-11"
        },
        {
          "Name": "UP-SIN-13",
          "Item": "UP-SIN-13"
        },
        {
          "Name": "UP-SJO-1",
          "Item": "UP-SJO-1"
        },
        {
          "Name": "UP-SJO-2",
          "Item": "UP-SJO-2"
        },
        {
          "Name": "UP-SJO-3",
          "Item": "UP-SJO-3"
        },
        {
          "Name": "UP-SJO-4",
          "Item": "UP-SJO-4"
        },
        {
          "Name": "UP-SJO-5",
          "Item": "UP-SJO-5"
        },
        {
          "Name": "UP-TAR-1",
          "Item": "UP-TAR-1"
        },
        {
          "Name": "UP-TAR-2",
          "Item": "UP-TAR-2"
        },
        {
          "Name": "UP-TAR-3",
          "Item": "UP-TAR-3"
        },
        {
          "Name": "UP-TAR-4",
          "Item": "UP-TAR-4"
        },
        {
          "Name": "UP-TAR-5",
          "Item": "UP-TAR-5"
        },
        {
          "Name": "UP-TAR-6",
          "Item": "UP-TAR-6"
        },
        {
          "Name": "UP-TUR-1",
          "Item": "UP-TUR-1"
        },
        {
          "Name": "UP-TUR-2",
          "Item": "UP-TUR-2"
        },
        {
          "Name": "UP-TUR-3",
          "Item": "UP-TUR-3"
        },
        {
          "Name": "UP-TUR-4",
          "Item": "UP-TUR-4"
        },
        {
          "Name": "UP-TUR-5",
          "Item": "UP-TUR-5"
        },
        {
          "Name": "UP-TUR-6",
          "Item": "UP-TUR-6"
        },
        {
          "Name": "UP-TUR-7",
          "Item": "UP-TUR-7"
        },
        {
          "Name": "UP-TUR-8",
          "Item": "UP-TUR-8"
        },
        {
          "Name": "UP-TUR-9",
          "Item": "UP-TUR-9"
        },
        {
          "Name": "UP-VPO-1",
          "Item": "UP-VPO-1"
        },
        {
          "Name": "P-1",
          "Item": "P-1"
        }
      ],
      "SelectedIndex": 4,
      "SelectedString": "E-5",
      "Id": "f3fb2964ae644e828d2cf4e8b30d0fa6",
      "NodeType": "ExtensionNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "8895d5b3446748058f41f6a77d475985",
          "Name": "value",
          "Description": "Selected value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A dropdown menu with customizable values."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleSlider, CoreNodeModels",
      "NumberType": "Double",
      "MaximumValue": 3.0,
      "MinimumValue": 0.0,
      "StepValue": 0.01,
      "Id": "c554d7fa17de4e75a8871bc375acfd97",
      "NodeType": "NumberInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "e8d30848943949879d9bc97f86c0c230",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Produces numeric values",
      "InputValue": 2.0
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "cdfd3887bd794d38b535a50bd9c95a07",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "9ce2dafc267b43d2893fca1a7142bd72",
          "Name": "ap",
          "Description": "ap",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f7babc41058341fa936b0ae8cf80da34",
          "Name": "",
          "Description": "af",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "af=ap*1000;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "3040829c792f42cbb9bca4d71c94db53",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "07a2407e48d44d3199fa9cee8f34aa3e",
          "Name": "cp",
          "Description": "cp",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5261d158c0204437b4a39a8df81fa41d",
          "Name": "ap",
          "Description": "ap",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "13e349d34f45462f9f193b1d5b8d0f3f",
          "Name": "",
          "Description": "ae",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "ae = cp * ap;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "7b74f919e0dd43ab9a7e802292584bd0",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "158700e04c424c7eaac118dae8ba3fcf",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ae89d3ad5c744baaafaa8c30cc5dae36",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8502c9dcf57a405c96e0cda92e4c30e2",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "28022bbb635f4236ada488a6d71f2d17",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "c2ee34f004b549c1b384602c815dfedf",
          "Name": "surface",
          "Description": "Autodesk.DesignScript.Geometry.Surface",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "493379ae1ba04fa18e3ebee97d0b9790",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.Area",
      "Replication": "Auto",
      "Description": "Returns the total surface area.\n\nSurface.Area: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "e6b392b585844032ab42ddfd8df1cd26",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "83ba331629074aaf829695a389d509e2",
          "Name": "closedCurve",
          "Description": "Closed curve used as surface boundary\n\nCurve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "75880cb2b5474042831aff07cb77edca",
          "Name": "Surface",
          "Description": "Surface created by patch",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.ByPatch@Autodesk.DesignScript.Geometry.Curve",
      "Replication": "Auto",
      "Description": "Create a Surface by filling in the interior of a closed boundary defined by input Curves.\n\nSurface.ByPatch (closedCurve: Curve): Surface"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "960e616a3b544567b3b0af84df4e4d40",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "8b2476b100c14cf18334a50276115f6d",
          "Name": "curves",
          "Description": "Curves to join into polycurve\n\nCurve[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "eb587ec6d6b0453c9999b1f696b32e9e",
          "Name": "joinTolerance",
          "Description": "Tolerance to determine size of gap allowed between curves to be joined\n\ndouble\nDefault value : 0.001",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d5808d2674274858b299196a606a809e",
          "Name": "trimCurves",
          "Description": "bool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cc0c84a99f1b44d19e26075592ec20e9",
          "Name": "trimLength",
          "Description": "double\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1e481e6dc27749b7aeb1de594ab23bf6",
          "Name": "PolyCurve",
          "Description": "Polycurve created by joined curves",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.PolyCurve.ByJoinedCurves@Autodesk.DesignScript.Geometry.Curve[],double,bool,double",
      "Replication": "Auto",
      "Description": "Make PolyCurve by joining curves. Flips curve as needed for connectivity. Choose a preferred join tolerance between 1e-6 and 1e-3 units.\n\nPolyCurve.ByJoinedCurves (curves: Curve[], joinTolerance: double = 0.001, trimCurves: bool = false, trimLength: double = 0): PolyCurve"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "f42a5a9ce2d94bfc9df1e00864025e85",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "43be4d687edf4e5895634b058532634a",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e989d818cee646038e6c7829d960f2c2",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2332c0d458934d36a26fda3fde9d86da",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.IntegerSlider, CoreNodeModels",
      "NumberType": "Integer",
      "MaximumValue": 20,
      "MinimumValue": 1,
      "StepValue": 1,
      "Id": "23d6e0c5a48740ec9a8b0b2a9ae0cf0d",
      "NodeType": "NumberInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "bfcaf1e890d74f32bc1f09007ca53cb0",
          "Name": "",
          "Description": "Int64",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Produces integer values",
      "InputValue": 5
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\nlistAux = IN[0]\r\nif len(listAux) == 4:\r\n    OUT = True\r\nelse:\r\n    OUT = False\r\n# Assign your output to the OUT variable.\r\n",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "fb3e263b93454508a7d71510753eb6d6",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "4c57426b1ab04b2bab91afe58d87baad",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c426679cfa54485ca5dceaf0490acf64",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\nvalidador = IN[0]\r\ntrueV = IN[1]\r\nfalseV= IN[2]\r\nif validador:\r\n    resultado = trueV\r\nelse:\r\n    resultado = falseV\r\n# Assign your output to the OUT variable.\r\nOUT = resultado",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "d73e2a9d6e6e4b8e93203851c17c4ab9",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "b6986e02273f48fc8567215ce9873b96",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f2cfff5798fc4316a231d9e1dbb0cdf7",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b779aa79fb00460da3e2648b634fe058",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2d658cfaafea4b1da2e28aa3c2d5469f",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "8bf384e73cbe49b6ad2293e2bf0d7690",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "59fa1e001d454d89bfcaed0e5e2b9e85",
          "Name": "listi",
          "Description": "listi",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fd6f2c3e6af6464e8033343ab935ab70",
          "Name": "",
          "Description": "uV",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "uV= listi[-1];"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\n# Assign your output to the OUT variable.\r\nOUT = IN[0][:4][::-1]",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "0826cf9cfa424ad1b58d3f0c361923fd",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "0bcb5801abf2422baa09f3e71d0c88bd",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c257cb4a2ff54c0382e4fbd558f1b8fd",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "WatchWidth": 28.0,
      "WatchHeight": 38.0,
      "Id": "7e2ab8e6e02c41a7bff86de27ffa6654",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "65df8fbb80894034b6afd1cf3c0c6153",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "befeb5d2533240c2936a4c7c24f010b8",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualizes a node's output"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "WatchWidth": 28.0,
      "WatchHeight": 38.0,
      "Id": "a17f925d99da4948aad68bd23c7790d6",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "8070427c60dc47beac166dfac9c355c4",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "076ec86708ad4379ac0d46b55230af8b",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualizes a node's output"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleSlider, CoreNodeModels",
      "NumberType": "Double",
      "MaximumValue": 100.0,
      "MinimumValue": 0.0,
      "StepValue": 0.1,
      "Id": "1335dee1705744188a3d253a8a652b29",
      "NodeType": "NumberInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "6a094eb96192491998cbfac6a729cf5c",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Produces numeric values",
      "InputValue": 1.0
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleSlider, CoreNodeModels",
      "NumberType": "Double",
      "MaximumValue": 100.0,
      "MinimumValue": 0.0,
      "StepValue": 0.1,
      "Id": "9ac0877237ef449aa1229d2b031ea5ab",
      "NodeType": "NumberInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c4f832258ad6467b89fa3fe7cd64022f",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Produces numeric values",
      "InputValue": 1.0
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleSlider, CoreNodeModels",
      "NumberType": "Double",
      "MaximumValue": 100.0,
      "MinimumValue": 0.0,
      "StepValue": 0.1,
      "Id": "3a1f27b23de24115a59521e6cb51945b",
      "NodeType": "NumberInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "fe1120bafe5a4fd89c19487e7146fe04",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Produces numeric values",
      "InputValue": 1.0
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleSlider, CoreNodeModels",
      "NumberType": "Double",
      "MaximumValue": 100.0,
      "MinimumValue": 0.0,
      "StepValue": 0.1,
      "Id": "46505aa117cb4f28a3889d82b0dee11b",
      "NodeType": "NumberInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "1789b23fb33945e784d8456c00aa323b",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Produces numeric values",
      "InputValue": 1.0
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleSlider, CoreNodeModels",
      "NumberType": "Double",
      "MaximumValue": 100.0,
      "MinimumValue": 0.0,
      "StepValue": 0.1,
      "Id": "f9b765743a1145dcbab3337b88b7fd73",
      "NodeType": "NumberInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "df77e4193717433c98138c45eada6e46",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Produces numeric values",
      "InputValue": 1.0
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleSlider, CoreNodeModels",
      "NumberType": "Double",
      "MaximumValue": 100.0,
      "MinimumValue": 0.0,
      "StepValue": 0.1,
      "Id": "b52a7a0d5c884018afbc4f68304986a9",
      "NodeType": "NumberInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "6ecc9b64bb84420aadcdb0b8cc1055c6",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Produces numeric values",
      "InputValue": 1.0
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleSlider, CoreNodeModels",
      "NumberType": "Double",
      "MaximumValue": 100.0,
      "MinimumValue": 0.0,
      "StepValue": 0.1,
      "Id": "b05ecf76f14442a897fbce87da9c331b",
      "NodeType": "NumberInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "4116ba00871e44fab17c92e0ec4c2071",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Produces numeric values",
      "InputValue": 1.0
    }
  ],
  "Connectors": [
    {
      "Start": "534d4739f4214226bb4e84c35d5d06ba",
      "End": "3d7cd5f498a143f789b9511a63456b24",
      "Id": "00c3f2baf52a4c6f99347fafe8866089",
      "IsHidden": "False"
    },
    {
      "Start": "d38de01b3e5749c691dda7a8416f7c1d",
      "End": "b9f0d08a69cd439c8546b279db0738ce",
      "Id": "88c1eaac80b04790aa3cd2e56d0568fa",
      "IsHidden": "False"
    },
    {
      "Start": "d38de01b3e5749c691dda7a8416f7c1d",
      "End": "670f713e8c244c99ba2aa75870db5533",
      "Id": "43e33922e7f148859203fd14039eb122",
      "IsHidden": "False"
    },
    {
      "Start": "d3db3b9dd33742ad8da3566f42da3335",
      "End": "1ba5091646d84a178a249db7525712d8",
      "Id": "29f38fac784f49c98859fe8b2e283de0",
      "IsHidden": "False"
    },
    {
      "Start": "212006439d044dada684e445da5730bd",
      "End": "c59e835b7839423e8e5af6b1887b893d",
      "Id": "878899aef1094af6a07edb180bde3b3c",
      "IsHidden": "False"
    },
    {
      "Start": "892a1c2c46b848b9a6852c83505d646a",
      "End": "cc825cd0da934fa4b228a8e47e57208a",
      "Id": "764669b33c114c00b0f1749e6039aa06",
      "IsHidden": "False"
    },
    {
      "Start": "892a1c2c46b848b9a6852c83505d646a",
      "End": "c9df62e51ebf40609410172be5a65a08",
      "Id": "685f558db7d04de0ab492ff4c71888fc",
      "IsHidden": "False"
    },
    {
      "Start": "8ee93cf7a7884dbba378e5bd70f914e1",
      "End": "1a12e061c89549b7a25d9b64da305b05",
      "Id": "a67f62c198b740de9e072b9fe8626ddb",
      "IsHidden": "False"
    },
    {
      "Start": "eca1dd01943649c3aca5c988a6ec72f5",
      "End": "00ade832078c45189f5bf8eb1f938022",
      "Id": "9b21c23c5dd14e359d70c4f08eca9688",
      "IsHidden": "False"
    },
    {
      "Start": "3dcb6ff932ca49179760c188d68543e6",
      "End": "bbaac8493b584191a88bc808155f464d",
      "Id": "33ad6d8da6c3442c935373d81ac40cbe",
      "IsHidden": "False"
    },
    {
      "Start": "d970635a040c4bcaba3fe3c74be31cd0",
      "End": "ded456b86eeb4ec0b1112a55ce0cacec",
      "Id": "bad16f6b272a4bc6a22ce996f7f059d1",
      "IsHidden": "False"
    },
    {
      "Start": "79b2175e724a43f98ef9a11d5c7358ec",
      "End": "49cc35cad0904ffd9d853e23cf04c53c",
      "Id": "7bcabdbf741440c8aab95af20a49a24b",
      "IsHidden": "False"
    },
    {
      "Start": "79b2175e724a43f98ef9a11d5c7358ec",
      "End": "00a6d76bf9144cf9b18cd27210a62dce",
      "Id": "5b49050228024472b45683afbf3f10b9",
      "IsHidden": "False"
    },
    {
      "Start": "eaf61f9b426e43cdb40c3c505a7d04fb",
      "End": "bb600614cdb04f448bee904b36473c29",
      "Id": "f8628ed97b06443ba2cc9aee04f38e73",
      "IsHidden": "False"
    },
    {
      "Start": "a9d2a0b336224457bb6b4b84984d2e38",
      "End": "aaacc05bfd4e45d4872ce23640b60149",
      "Id": "3fec7ba89f464cb8b9cd057347806f81",
      "IsHidden": "False"
    },
    {
      "Start": "0d30d95bc4a54e9a899dfb80095ee992",
      "End": "ae7b77bdd27849019d2212da86ce7525",
      "Id": "0219bb91a02d4bc7b125c2e170ac2e50",
      "IsHidden": "False"
    },
    {
      "Start": "0d30d95bc4a54e9a899dfb80095ee992",
      "End": "20d4a3ef8e664e0883e6d0253e12e00c",
      "Id": "b2f88f02c7b34941883641979139ea5c",
      "IsHidden": "False"
    },
    {
      "Start": "01aa02bfa0224746a31efe739eef60cb",
      "End": "5cd18558f55049e49eed1fee99c31ecb",
      "Id": "1776ea65d38c4e72b40a8882fe728e06",
      "IsHidden": "False"
    },
    {
      "Start": "707bc77a39284d26b5141a0ba32ead27",
      "End": "6664b5a17a644649b6a301c4af8b840d",
      "Id": "6fc89152e1084162bad2b3dce348688b",
      "IsHidden": "False"
    },
    {
      "Start": "707bc77a39284d26b5141a0ba32ead27",
      "End": "ae5bcd1fdf3b4472939d7195ca81e6d6",
      "Id": "878f9b363d7644d99abf6a894c8f3f49",
      "IsHidden": "False"
    },
    {
      "Start": "707bc77a39284d26b5141a0ba32ead27",
      "End": "2f975a1f032041b6b6522f2cf39443b6",
      "Id": "f7bda8e4ca6145aba848045bb7148f09",
      "IsHidden": "False"
    },
    {
      "Start": "f08b5378e7304fd98dd7b1f3de534bdb",
      "End": "7bc12aa2856247608ada5d86517fe734",
      "Id": "51e561ca769540cb9ed8935cbd6b4a4c",
      "IsHidden": "False"
    },
    {
      "Start": "d822f719ebee47a2afa2273553969e13",
      "End": "92b726d5b3844339a3683f839e75bf54",
      "Id": "21217bf670e8467caa08c62a98974655",
      "IsHidden": "False"
    },
    {
      "Start": "50b44d2ddfa04991b780d726f79e63b6",
      "End": "5ae738889de64718b0a983abd027e8aa",
      "Id": "d9225d17f35148d991669dc084c7700a",
      "IsHidden": "False"
    },
    {
      "Start": "e45cd8a58d844fc6939e8baf8d19924e",
      "End": "4784ea061b87496385f72c9254197763",
      "Id": "c9ebecfc211047c4892090551a8292cf",
      "IsHidden": "False"
    },
    {
      "Start": "2326d5dfa45d4376a667d27488c36644",
      "End": "016b7bc8059a42619511370307f0c6ea",
      "Id": "42dccc630eec428b97c9c7d971427a4c",
      "IsHidden": "False"
    },
    {
      "Start": "2326d5dfa45d4376a667d27488c36644",
      "End": "8f131634d5d64ef690fcaf257c0924ea",
      "Id": "80cb0647fdc044388b5850ddc1e0ceec",
      "IsHidden": "False"
    },
    {
      "Start": "4d92e18b780d4199ab489e5015b82428",
      "End": "0092ce47664b4fa2849184c903947421",
      "Id": "b94ca837c34c4502898e5300cdc4e412",
      "IsHidden": "False"
    },
    {
      "Start": "f44aa25bce884944b9b357ff3bc2bc96",
      "End": "8b1b3517ad944a8fa908ffdec3cf562b",
      "Id": "ec23fc597de64c049bc80a1446c2f99e",
      "IsHidden": "False"
    },
    {
      "Start": "6394d902096d4745a88620dcfba5d8fc",
      "End": "af7900ddfdee44da8d5cbb637889e66b",
      "Id": "df32f84f68344916b8d48afba1e47558",
      "IsHidden": "False"
    },
    {
      "Start": "98e020b396c8418faafb86f32ad9a637",
      "End": "79a1153f77dc48969040ebabaab57cb3",
      "Id": "961c28ba93e7493ca68350873edc2add",
      "IsHidden": "False"
    },
    {
      "Start": "a0ea6ade669b48ca9fc1aa369713db20",
      "End": "7606023b324a44faa2ca72d51cf1a46d",
      "Id": "4ac38a59edcf434ba9860eafe75631e2",
      "IsHidden": "False"
    },
    {
      "Start": "3052a66f89a0460585093b66b1066c31",
      "End": "bca76f95bf0740c582db23751f917efe",
      "Id": "6953b55fc02140418e67fb3ad4a12288",
      "IsHidden": "False"
    },
    {
      "Start": "3052a66f89a0460585093b66b1066c31",
      "End": "08c9605845b349fa8c4962639ecd66f5",
      "Id": "ebe1f953ab69461e98809e876c477ce2",
      "IsHidden": "False"
    },
    {
      "Start": "a10e1038a0354b5baddacaafc333c579",
      "End": "87997658b12947c09dc8c1572d693670",
      "Id": "fca90203474946f09c3f448b597ba3fe",
      "IsHidden": "False"
    },
    {
      "Start": "a10e1038a0354b5baddacaafc333c579",
      "End": "54bb4c74979e4ed4a4b4879085e95c5b",
      "Id": "767164fb1bb141708426541b25e6b8e9",
      "IsHidden": "False"
    },
    {
      "Start": "e1870b7bf48143158b7c8596a297b349",
      "End": "78d98e2c1dd24d9383b2cbdd9248250e",
      "Id": "42564914d3ed414aa7b12b146de782a9",
      "IsHidden": "False"
    },
    {
      "Start": "f67294a444bf41259b57e5ad15b4cb90",
      "End": "e31fb0d497c7465ab7be6a9f0bfec8a5",
      "Id": "2cc92ead28304e598c2379c14ea2f485",
      "IsHidden": "False"
    },
    {
      "Start": "b78a73a665ee48d190af9648bc6088f2",
      "End": "8656370408de4e6d96d1e2b2fe32909d",
      "Id": "b1826881801449c0a35f8ec9444ffa85",
      "IsHidden": "False"
    },
    {
      "Start": "99d96ce8687748708d16032abb0bae21",
      "End": "0f780020d2424de5941bea16916af440",
      "Id": "08d43b553ab04a6189050e22c33093e3",
      "IsHidden": "False"
    },
    {
      "Start": "99d96ce8687748708d16032abb0bae21",
      "End": "9b5d879a8faf4cac8eb5d50a02188c76",
      "Id": "a888a4b01ed84edeb3fa27390c734db5",
      "IsHidden": "False"
    },
    {
      "Start": "f4f3555de2f84565bc622353607ecb9f",
      "End": "2b14dc66a1c243beb7f3f429d393532a",
      "Id": "644e39302a9d40b397e4f2379a864cdf",
      "IsHidden": "False"
    },
    {
      "Start": "3e0557090957419d949b9efbfa01034b",
      "End": "5d5df835384a4756baec6a479d36dcbd",
      "Id": "43f05257aeee48dba55a7bd617b63cd4",
      "IsHidden": "False"
    },
    {
      "Start": "3e0557090957419d949b9efbfa01034b",
      "End": "38353a24972e4935b9f6def2d806f50e",
      "Id": "c4af6f8e774e45dc9efcbe2cce2c00fa",
      "IsHidden": "False"
    },
    {
      "Start": "dcbaf734481b469599397c0df32412b5",
      "End": "4698a9abd367470c88ea5dda1d8e5b3b",
      "Id": "82687b6b28294523820e281981494c14",
      "IsHidden": "False"
    },
    {
      "Start": "dcbaf734481b469599397c0df32412b5",
      "End": "61ad4dfa1b2d4a419d594f9fe008533a",
      "Id": "3c3be27ea06c4c2e875ee540184b982f",
      "IsHidden": "False"
    },
    {
      "Start": "9ff2a98dfc3244878a1ce630d59b0330",
      "End": "dc54629204f44df9b8b51a4ec5cc68ca",
      "Id": "8a383d5b23954753a6ae10fe3944b8dd",
      "IsHidden": "False"
    },
    {
      "Start": "b2ff45b06c654ff381f469168ecaaddd",
      "End": "4f3a9be5d6ad454387a32b1fd73fcdd2",
      "Id": "b3669a0e09d4406fa54ff67919299ab6",
      "IsHidden": "False"
    },
    {
      "Start": "7b9307acacb5400ea944377e684f902e",
      "End": "0079a452a8434f71a3bf8c9772e33d57",
      "Id": "4e5f45d4893a4d2c85d2fec60bfac21a",
      "IsHidden": "False"
    },
    {
      "Start": "0fb26d0e7b504165a028c74256d4a832",
      "End": "d3712e4c38cb47e5b79d4ed2891a19e3",
      "Id": "55767c689c7a4f70b68ccc40d0cfe383",
      "IsHidden": "False"
    },
    {
      "Start": "e6539ef12a924e4e8a5704b556a1c1c0",
      "End": "5e9c6f58372d43ffae020fc6fec10ef8",
      "Id": "fd9add1df75c4f5f86efa4e4454af232",
      "IsHidden": "False"
    },
    {
      "Start": "e6539ef12a924e4e8a5704b556a1c1c0",
      "End": "e70a2d5034d4441ba26a1146621ab1de",
      "Id": "82ce528ce6894bc48a083528a840a4af",
      "IsHidden": "False"
    },
    {
      "Start": "e6539ef12a924e4e8a5704b556a1c1c0",
      "End": "57157437b9f94e6097bbdecd685eb448",
      "Id": "b4790b8bacf94ee1b28e534366c56087",
      "IsHidden": "False"
    },
    {
      "Start": "36a549b5bd9248f9af97c1ae62b2ac4d",
      "End": "d61c8cef2ef94252ad2d1c44c616409a",
      "Id": "92c5848b188d421cb2bcfce28ef2ffa6",
      "IsHidden": "False"
    },
    {
      "Start": "1c440e835c104098a6661be110728923",
      "End": "f52e95f1bed94ed49ba079e1e70dea5d",
      "Id": "c429d9cf3bd944c4830a8d7380db5aa5",
      "IsHidden": "False"
    },
    {
      "Start": "398a3dc3813b4b5a9806f15312567584",
      "End": "0b6700471d9745c2b4e6da0a04fcb322",
      "Id": "c106ca2eb77849eb9c54602d5bd63330",
      "IsHidden": "False"
    },
    {
      "Start": "5232ed63a9f5481aa929de5b060f876a",
      "End": "1a9dd40ac6c5491da98b89c8449310a1",
      "Id": "d50a929c86974ff4a6b748eb2a2df204",
      "IsHidden": "False"
    },
    {
      "Start": "b75ed8d4022a49be9381e876daaa904a",
      "End": "3ab685f0e95b40edbb82656feae91d4f",
      "Id": "e06f49d72bac4e1eb32ab2a6f0e16593",
      "IsHidden": "False"
    },
    {
      "Start": "70eb24963a234656a13c27f0b21b8e6b",
      "End": "cc115337ec7b4d518ca0213a687ebee3",
      "Id": "f46acb6b956849abab64d16b0c06ea2f",
      "IsHidden": "False"
    },
    {
      "Start": "783b8de8cbd74c2c81e74e9691ca3db2",
      "End": "54ed832f0528406b80089c02bb4472db",
      "Id": "a4d7809a136b4a7b8e81b4ded9dfc716",
      "IsHidden": "False"
    },
    {
      "Start": "ebbb1d19c3604627b920622a15faa33a",
      "End": "71698210e8c5411cb86c510dae1634d9",
      "Id": "fe35b6942b4c476c901a182fd8d6523f",
      "IsHidden": "False"
    },
    {
      "Start": "c07d1972b90b494ab7c2971a189a2b54",
      "End": "450766dd0cb64dd284afb50e58c51aef",
      "Id": "d01c721cd4cf40d683df7f92e95391ef",
      "IsHidden": "False"
    },
    {
      "Start": "47efb4ecdf094a80b30085b5e0ef7bd1",
      "End": "f4c197763aeb4bfdbbf1e721cefbb9ef",
      "Id": "bc01d866c1bf4b70839af295dc253ffd",
      "IsHidden": "False"
    },
    {
      "Start": "ffac9d895b5147fab7f4df51b80ea91a",
      "End": "caee73464f4c4d9bb45c87325d60da6f",
      "Id": "443d4f9634984134800c620896270711",
      "IsHidden": "False"
    },
    {
      "Start": "e037873a28c941e8a3db3d0bc8dec2d0",
      "End": "d03d85f394cd4dc5a20a0c69e807b863",
      "Id": "73b0677b604a478f83638b1e270665a5",
      "IsHidden": "False"
    },
    {
      "Start": "b2808e142b0c486292ec5e2fbfd952d7",
      "End": "bcaa2b4fcf784f07909f38e0a44cdace",
      "Id": "9e6c4e1c29ca4d1b98d293298cbfebb5",
      "IsHidden": "False"
    },
    {
      "Start": "2a24e19eb24e4be4bb825e421a94b13d",
      "End": "ac73bda09dbe465280f54511fff5d6d8",
      "Id": "b38387fffef749dc8753770fa3c02b0e",
      "IsHidden": "False"
    },
    {
      "Start": "ab53f9c2e79d4e01b4985b58d15c5623",
      "End": "3bfe93ce081f4b25a5203bc6369e7529",
      "Id": "18361f03a72544a7a82dd7ee653bf6bf",
      "IsHidden": "False"
    },
    {
      "Start": "199e89b3bf5b42ddab2903427428ad32",
      "End": "ebe80fd7ead64c0f908b608c16f9e687",
      "Id": "d3c1cc1da97b4730b67554a513b77f5b",
      "IsHidden": "False"
    },
    {
      "Start": "fadbb14b074540c48ace9737e2bd6625",
      "End": "16860b9106204376810d2db8ae1ec35d",
      "Id": "dac012bbf7ad4f8e9023f65a90557491",
      "IsHidden": "False"
    },
    {
      "Start": "39709824685f4a97a4a34134e1ab32d4",
      "End": "0833f0e7bca24a3b997f9660b4acf88c",
      "Id": "0a369b8635174db4ba1fd9a46b85404f",
      "IsHidden": "False"
    },
    {
      "Start": "39709824685f4a97a4a34134e1ab32d4",
      "End": "7bd377f3304545eb83f19a3ebcea9ca3",
      "Id": "8d48d163522d4be4bf92a57dc396a43b",
      "IsHidden": "False"
    },
    {
      "Start": "016f8ea31f674027bfe9e7c9de2851f7",
      "End": "8309a0b8b693449fb0e6c6a2e572e088",
      "Id": "c528dfa9c1014dffa2efad8b7ef14e35",
      "IsHidden": "False"
    },
    {
      "Start": "016f8ea31f674027bfe9e7c9de2851f7",
      "End": "29eb9cc179d143389d4cd622ce1fc31c",
      "Id": "fb7137448e39484e9d05593243e9c035",
      "IsHidden": "False"
    },
    {
      "Start": "2b32e26749a745dcb60a2e83d45f597d",
      "End": "d3dbab31038644c4916c785346e6817f",
      "Id": "a62486e279e3437982829fb785865d25",
      "IsHidden": "False"
    },
    {
      "Start": "906e3a4846cc4d289b1639fd4a6830af",
      "End": "5aecdaedb6a64bb0a66b38c7e1d22b62",
      "Id": "24c450a9267f4483b6ec6824b1847aa8",
      "IsHidden": "False"
    },
    {
      "Start": "4596ee07fb7443a28cc40c5d1341a66b",
      "End": "fc8b6ca372bc4747892abaf56c7a0254",
      "Id": "8e3fca980adb463682b64638e2727610",
      "IsHidden": "False"
    },
    {
      "Start": "1f25befa0b2b4bed9b0a8eadd088dcc7",
      "End": "f7a07f4192eb459eac350d4b25299cea",
      "Id": "b7a901a343a040fcab5fb13cfef3c74a",
      "IsHidden": "False"
    },
    {
      "Start": "40dddab9a2464037ad25978f9cb14c1c",
      "End": "39afe2d97cef47b3b2f4a931884b1cd6",
      "Id": "230b80843c454b5d88445fad9ea301ab",
      "IsHidden": "False"
    },
    {
      "Start": "396d1a023eca4647b353114a145ce489",
      "End": "b4f0392ee0ed479b9f5f73eec53f701b",
      "Id": "c3ad6ea2e0514e35b6f1863c87c5a8a5",
      "IsHidden": "False"
    },
    {
      "Start": "ef179c57431b48b780a016ef25e1ab66",
      "End": "3ac4936a297f4dbdadd4e07a61d57d28",
      "Id": "5b6bac70acc94bf982b9c400c4a6a44a",
      "IsHidden": "False"
    },
    {
      "Start": "ef179c57431b48b780a016ef25e1ab66",
      "End": "ee6e94c8e927402284efb4d69b3802d6",
      "Id": "0aa19bf9aea94b8d99960c8cfd8b4c2b",
      "IsHidden": "False"
    },
    {
      "Start": "b06fa52fca534ceea752d6409ac2e630",
      "End": "914436e92d0a4cc4a73676c784ee6054",
      "Id": "76ec906cc66044e1a5aa10323d794fcd",
      "IsHidden": "False"
    },
    {
      "Start": "b06fa52fca534ceea752d6409ac2e630",
      "End": "5c86de703dca4bdba761ba81849ee396",
      "Id": "72fc7ed0ba484c57863fa9c58e9818ef",
      "IsHidden": "False"
    },
    {
      "Start": "c55ea6b249dd441fbae0094dd8a3bdad",
      "End": "083de43c11ea46adac2196eef9c791f9",
      "Id": "dbc8a1977d214574af41509a6f646d40",
      "IsHidden": "False"
    },
    {
      "Start": "5dfe3ceceddf41c2870480883d67b302",
      "End": "5757aa2dd85a45c4beaa6b143467ecbd",
      "Id": "17ec80ad8e33462db594a2447ecf6d89",
      "IsHidden": "False"
    },
    {
      "Start": "5dfe3ceceddf41c2870480883d67b302",
      "End": "fd8bd6186c084db88b1375693731c71a",
      "Id": "8698a9e803e641df80e9d71e0cd58286",
      "IsHidden": "False"
    },
    {
      "Start": "5dfe3ceceddf41c2870480883d67b302",
      "End": "46a512d53e614bd88203e5e324908bca",
      "Id": "8fe437bdc3d64e569f49119cd26a353b",
      "IsHidden": "False"
    },
    {
      "Start": "5dfe3ceceddf41c2870480883d67b302",
      "End": "b1b8793b5c0e4251b18092daedb539a7",
      "Id": "62a92a7aaf3d419fae33ac13c713c474",
      "IsHidden": "False"
    },
    {
      "Start": "cc82ad56aeeb4fc7910bc0fe761686ad",
      "End": "8324c99236324d7eab1f6899f2d9f77f",
      "Id": "39d9fb07d6f64ee0904d94e19d9ed3bf",
      "IsHidden": "False"
    },
    {
      "Start": "cc82ad56aeeb4fc7910bc0fe761686ad",
      "End": "57f3f614a30a4374a4fb60c8ef31f3bb",
      "Id": "1e7411423a8c42f1b0ab5ee13d56ffe5",
      "IsHidden": "False"
    },
    {
      "Start": "cc82ad56aeeb4fc7910bc0fe761686ad",
      "End": "fc1094b636cf4ec89bdc69398cee2398",
      "Id": "d127dcedc57f47658d71c9ec4004075b",
      "IsHidden": "False"
    },
    {
      "Start": "1a63f4f7745b45edb3d87dd99fb6cfe9",
      "End": "0546ab0e782a4727be9bfd6835314708",
      "Id": "c2f557f2a3744a24aad883df1fc0931e",
      "IsHidden": "False"
    },
    {
      "Start": "1a63f4f7745b45edb3d87dd99fb6cfe9",
      "End": "e339f9f8cd744254b7f691123d19024f",
      "Id": "c5309d5a6d764e5585b001d2521f9de6",
      "IsHidden": "False"
    },
    {
      "Start": "1a63f4f7745b45edb3d87dd99fb6cfe9",
      "End": "54629b1107fb496ba336a79971a139bc",
      "Id": "d5c04716583c4bec84684a34b2c7562b",
      "IsHidden": "False"
    },
    {
      "Start": "1a63f4f7745b45edb3d87dd99fb6cfe9",
      "End": "55d5485a07a74b6e8a42e4ed0b43395d",
      "Id": "55348d46231a4264b42cf026aa42a5bd",
      "IsHidden": "False"
    },
    {
      "Start": "1a63f4f7745b45edb3d87dd99fb6cfe9",
      "End": "40e332e701104179bde152c8ab956b1e",
      "Id": "670dccb3e55541308b5e80ca26f57d20",
      "IsHidden": "False"
    },
    {
      "Start": "8755300ee9ff4773b6f0aea3a7e9f257",
      "End": "7134061d0b224c4b8ee43d57a6506d2a",
      "Id": "dd82ecd122a54ab1ad10d243443d870f",
      "IsHidden": "False"
    },
    {
      "Start": "33aecd55e2e048b5bf2ab9b1f06fa8a3",
      "End": "9efa076f590e4d288a6587e0c3c2ac15",
      "Id": "ce62bfbe9f804ec1b5c381d339022a41",
      "IsHidden": "False"
    },
    {
      "Start": "904e172564744f74baefa176a8d89c8d",
      "End": "48b698f8cfbc4cd4a74ef15ef232c421",
      "Id": "b171ea67df6c4085a477bb8177c324a0",
      "IsHidden": "False"
    },
    {
      "Start": "053afe9a69114121949146543a86c4cd",
      "End": "f8355440159d415a90235d397bdc11d1",
      "Id": "14e8da2b5a8d45ce85faf297659a7395",
      "IsHidden": "False"
    },
    {
      "Start": "f9cfd971f625459988f36e183e338fb0",
      "End": "dd2e9430bb5940ecbedacc598506f38a",
      "Id": "68c7a7be10164f9280a29323a0293b68",
      "IsHidden": "False"
    },
    {
      "Start": "a0e6c52e9bc54b2480ce625684292bf3",
      "End": "cebb0d70924b48eaa5a4da4d4863f279",
      "Id": "25146ebe68494d678a0c7905c97ed2af",
      "IsHidden": "False"
    },
    {
      "Start": "a0e6c52e9bc54b2480ce625684292bf3",
      "End": "6d64413398714a61b97f5aefe70f87fc",
      "Id": "b9d690ebf1914fce9f98b2da4bcf9289",
      "IsHidden": "False"
    },
    {
      "Start": "a0e6c52e9bc54b2480ce625684292bf3",
      "End": "43be4d687edf4e5895634b058532634a",
      "Id": "d6df8a7d1799485d82a374e556b61f17",
      "IsHidden": "False"
    },
    {
      "Start": "4b7f29ea12784ffb816032b4933b7174",
      "End": "63181f4590d4406a81c48204e4ab6766",
      "Id": "26ffd6ca27ef4b42ab95742efdf97bc9",
      "IsHidden": "False"
    },
    {
      "Start": "e026ae7be4e743efa988837d738b7990",
      "End": "3b09acce26df4b7a98c1ab86ff80c24d",
      "Id": "0aebe66b4bf84823b1bf50f53e706e93",
      "IsHidden": "False"
    },
    {
      "Start": "90bdd687698948c09f7b746776d02618",
      "End": "4c57426b1ab04b2bab91afe58d87baad",
      "Id": "003aa5b20ed6416aa9e4812e8a110dd9",
      "IsHidden": "False"
    },
    {
      "Start": "90bdd687698948c09f7b746776d02618",
      "End": "59fa1e001d454d89bfcaed0e5e2b9e85",
      "Id": "7968f7e03b8943a586a2e70bd4148d39",
      "IsHidden": "False"
    },
    {
      "Start": "90bdd687698948c09f7b746776d02618",
      "End": "0bcb5801abf2422baa09f3e71d0c88bd",
      "Id": "04418cdebab84db4a2d5d752d2489d75",
      "IsHidden": "False"
    },
    {
      "Start": "8895d5b3446748058f41f6a77d475985",
      "End": "6fef9e00edc14ed3a6027e5b4d197d15",
      "Id": "21eb8ee733d741449e1e74b03ea4f1ce",
      "IsHidden": "False"
    },
    {
      "Start": "e8d30848943949879d9bc97f86c0c230",
      "End": "9ce2dafc267b43d2893fca1a7142bd72",
      "Id": "7b89305c882240fc96c67fe887b5da35",
      "IsHidden": "False"
    },
    {
      "Start": "e8d30848943949879d9bc97f86c0c230",
      "End": "371841a094ac4fa09ce87c64ed796c26",
      "Id": "cbab45989aae450d88e4493f7c6b08d7",
      "IsHidden": "False"
    },
    {
      "Start": "f7babc41058341fa936b0ae8cf80da34",
      "End": "f3039cb3775f4da9a7fca25faa43fd99",
      "Id": "a402164330d44d41a73067b1d9224a6e",
      "IsHidden": "False"
    },
    {
      "Start": "f7babc41058341fa936b0ae8cf80da34",
      "End": "24281bb5c2cd484aa2092413ba89e041",
      "Id": "6bf68ba7c0724d479952bcf867a3d593",
      "IsHidden": "False"
    },
    {
      "Start": "f7babc41058341fa936b0ae8cf80da34",
      "End": "5261d158c0204437b4a39a8df81fa41d",
      "Id": "6c269953a6ee4be6827028889868f276",
      "IsHidden": "False"
    },
    {
      "Start": "8502c9dcf57a405c96e0cda92e4c30e2",
      "End": "8c1074f21523495093ccd979ceeee5a2",
      "Id": "5ebcb5fb312946579d702b7e38ed45c7",
      "IsHidden": "False"
    },
    {
      "Start": "493379ae1ba04fa18e3ebee97d0b9790",
      "End": "18539037e89b4aee97e22b456ec7c30c",
      "Id": "be37801ff0544c4a8214e36dabe1f73a",
      "IsHidden": "False"
    },
    {
      "Start": "75880cb2b5474042831aff07cb77edca",
      "End": "c2ee34f004b549c1b384602c815dfedf",
      "Id": "b55267d7fd6e49db9c94d1b9db6b9f10",
      "IsHidden": "False"
    },
    {
      "Start": "1e481e6dc27749b7aeb1de594ab23bf6",
      "End": "83ba331629074aaf829695a389d509e2",
      "Id": "170bb5a665624e9ebff4fb38c7011d86",
      "IsHidden": "False"
    },
    {
      "Start": "2332c0d458934d36a26fda3fde9d86da",
      "End": "8b2476b100c14cf18334a50276115f6d",
      "Id": "1462bb45bbb2436fa2b485f33740effa",
      "IsHidden": "False"
    },
    {
      "Start": "bfcaf1e890d74f32bc1f09007ca53cb0",
      "End": "e81435a9c54e46d7bf162236b223ec3b",
      "Id": "0fe7de07fd7c41cc985a793500c6b236",
      "IsHidden": "False"
    },
    {
      "Start": "bfcaf1e890d74f32bc1f09007ca53cb0",
      "End": "f2cfff5798fc4316a231d9e1dbb0cdf7",
      "Id": "a274d88114304f1b8022e60f2f179056",
      "IsHidden": "False"
    },
    {
      "Start": "c426679cfa54485ca5dceaf0490acf64",
      "End": "b6986e02273f48fc8567215ce9873b96",
      "Id": "bb310897737642fa92fbf70beed9515c",
      "IsHidden": "False"
    },
    {
      "Start": "2d658cfaafea4b1da2e28aa3c2d5469f",
      "End": "07a2407e48d44d3199fa9cee8f34aa3e",
      "Id": "034c17ee8ac14a94862fe1565803c907",
      "IsHidden": "False"
    },
    {
      "Start": "2d658cfaafea4b1da2e28aa3c2d5469f",
      "End": "84587b3ba65d4166a054a32a75a4262f",
      "Id": "b6cc2bc458734d57894959fb0da2b264",
      "IsHidden": "False"
    },
    {
      "Start": "2d658cfaafea4b1da2e28aa3c2d5469f",
      "End": "65df8fbb80894034b6afd1cf3c0c6153",
      "Id": "6427bc08f39e43cdbcf36d120ca08e6d",
      "IsHidden": "False"
    },
    {
      "Start": "2d658cfaafea4b1da2e28aa3c2d5469f",
      "End": "8070427c60dc47beac166dfac9c355c4",
      "Id": "2bc8e8ae68cc4146b693e064269912ff",
      "IsHidden": "False"
    },
    {
      "Start": "fd6f2c3e6af6464e8033343ab935ab70",
      "End": "b779aa79fb00460da3e2648b634fe058",
      "Id": "0b5946c6e3c94ca2ba0f5f679b52a45e",
      "IsHidden": "False"
    },
    {
      "Start": "c257cb4a2ff54c0382e4fbd558f1b8fd",
      "End": "158700e04c424c7eaac118dae8ba3fcf",
      "Id": "dd0230583bea4727882f1c76f673a4d2",
      "IsHidden": "False"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [],
  "EnableLegacyPolyCurveBehavior": true,
  "Thumbnail": "",
  "GraphDocumentationURL": null,
  "ExtensionWorkspaceData": [
    {
      "ExtensionGuid": "28992e1d-abb9-417f-8b1b-05e053bee670",
      "Name": "Properties",
      "Version": "3.0",
      "Data": {}
    },
    {
      "ExtensionGuid": "DFBD9CC0-DB40-457A-939E-8C8555555A9D",
      "Name": "Generative Design",
      "Version": "7.1",
      "Data": {
        "DefaultStudySettings": ""
      }
    }
  ],
  "Author": "Mateo Flores - Renato Berrezueta",
  "Linting": {
    "activeLinter": "Generative Design",
    "activeLinterId": "DFBD9CC0-DB40-457A-939E-8C8555555A9D",
    "warningCount": 0,
    "errorCount": 0
  },
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 100.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "3.0.3.7597",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "_Background Preview",
      "EyeX": 23355.51953125,
      "EyeY": 32457.732421875,
      "EyeZ": 31132.90625,
      "LookX": -4857.8828125,
      "LookY": -28761.357421875,
      "LookZ": -23328.052734375,
      "UpX": -0.12640683352947235,
      "UpY": 0.7880070805549622,
      "UpZ": -0.6025497913360596
    },
    "ConnectorPins": [],
    "NodeViews": [
      {
        "Id": "d2fd781fe9344fe89e9b0bec53f1654f",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 339.5713798932675,
        "Y": 60.046786083640654
      },
      {
        "Id": "de48e0843452449e92eac4003a56188a",
        "Name": "Surface.ByPatch",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 607.3509736788574,
        "Y": 332.1402986809826
      },
      {
        "Id": "9c5d468631b349e7b48203e32f41d87a",
        "Name": "Curve.NormalAtParameter",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 696.9369808472247,
        "Y": -103.815163165802
      },
      {
        "Id": "5005d2ebff4d4fb09c850c05d23946cf",
        "Name": "Curve.PointAtParameter",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 654.1001105359655,
        "Y": 85.51577914958852
      },
      {
        "Id": "6c265e95ece84e008d206e486d8e3dca",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 487.19998293228855,
        "Y": -72.74666676086599
      },
      {
        "Id": "79671cd3b15240e59cc8efd10f5f2432",
        "Name": "Geometry.Translate",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 957.8259519514686,
        "Y": 231.2452341109838
      },
      {
        "Id": "923d758d769340eb892747e739da45e7",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 648.559744963969,
        "Y": 506.92349683604334
      },
      {
        "Id": "6fd536730ced4b8696acfb6ee09203aa",
        "Name": "Geometry.DoesIntersect",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 1006.9013591630292,
        "Y": 522.8254260398717
      },
      {
        "Id": "a4b8019aad784dd39cdcc2664e4b8d80",
        "Name": "Curve.Reverse",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 998.5228910950191,
        "Y": 6.238568573065379
      },
      {
        "Id": "fe0c642581f74018b67743a350c9a307",
        "Name": "Geometry.Explode",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 1364.9860278769436,
        "Y": 134.92654597391459
      },
      {
        "Id": "87d5cc7da2ab4b89b4192c5a04e20dc8",
        "Name": "Curve.NormalAtParameter",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 1720.0654570199786,
        "Y": -118.3003926283036
      },
      {
        "Id": "67dbec1dd7a14a479ff1d949d5226399",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 1424.399484767313,
        "Y": 11.789098960940407
      },
      {
        "Id": "757528320c634f11a234503d34586e43",
        "Name": "Geometry.Translate",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 1700.1504927268338,
        "Y": 231.4408831451134
      },
      {
        "Id": "51e93c0b52a94d9a8f1858a85af00a82",
        "Name": "Curve.ExtendStart",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 2105.3292877104714,
        "Y": 36.571052334083106
      },
      {
        "Id": "4edd1d4286784e9eb71d13b095632da6",
        "Name": "Curve.ExtendEnd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 1946.111078394495,
        "Y": 434.59329943249213
      },
      {
        "Id": "da8345834459417db16f15a79002b17d",
        "Name": "Curve.PointAtParameter",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 2974.041306351869,
        "Y": -78.27089066313602
      },
      {
        "Id": "f67f9e349679401e8d6049eb4fba22be",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 2781.9886292427336,
        "Y": 190.56994963464967
      },
      {
        "Id": "389c3f3fdb484da8b3cabed49b7cbb63",
        "Name": "Geometry.DoesIntersect",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 2454.471050110694,
        "Y": 499.74768909465183
      },
      {
        "Id": "7ce3379f72ae41548c81326b080943d5",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 2524.671686724868,
        "Y": 274.2053602004089
      },
      {
        "Id": "d5b398fd67c3432699d988b4b3926751",
        "Name": "Curve.SplitByPoints",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 2509.269421708271,
        "Y": 19.957514560393975
      },
      {
        "Id": "96b5108355a9464b82e3b1a9cc19a502",
        "Name": "Geometry.DoesIntersect",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 3071.1667938846904,
        "Y": -339.62249868444815
      },
      {
        "Id": "3818cec472f14ad6a879f159763cf5b7",
        "Name": "List.IndexOf",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3128.317042494179,
        "Y": 336.9719078764483
      },
      {
        "Id": "902077b7f26a414cb465c2a3ca052595",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 2853.913508845396,
        "Y": 417.28329837468755
      },
      {
        "Id": "638e7b4c006d4ba989cffd52dedffbc3",
        "Name": "List.GetItemAtIndex",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 3380.1332687371496,
        "Y": 65.95440139238144
      },
      {
        "Id": "d43fbc13969f415cb57a4a7baef2d91e",
        "Name": "GeometryColor.ByGeometryColor",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4032.6745297581865,
        "Y": 344.34448997724394
      },
      {
        "Id": "22f90cee874149aab8ea629b313de270",
        "Name": "Color.ByARGB",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3406.624071357307,
        "Y": 381.9137156872266
      },
      {
        "Id": "aadfc04cd5cc4d5cb332d52783dfd28e",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3144.9318248045993,
        "Y": 498.7680601527509
      },
      {
        "Id": "33bd2036d4fd4bb8982df4ab5ad881df",
        "Name": "Geometry.Translate",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4023.670752799336,
        "Y": -280.71542763430443
      },
      {
        "Id": "2828d27cf5c04b7bb23ba3f4f607fa24",
        "Name": "Vector.ZAxis",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3424.6994993927974,
        "Y": -220.93217960573202
      },
      {
        "Id": "5c238076d8254c348342c68f35ebe4e4",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3415.521370100577,
        "Y": -96.57008944229347
      },
      {
        "Id": "fe1aaff34b9940a6954be042980951fa",
        "Name": "Extension",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 1478.7623630598596,
        "Y": 420.22939585279903
      },
      {
        "Id": "23dcfb05e8a640888153f1d8dc716395",
        "Name": "Element.Curves",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 226.5542082227921,
        "Y": -249.34047531600845
      },
      {
        "Id": "e03595219eff445b973be39dad27c3e7",
        "Name": "Python Script",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 2195.255025175165,
        "Y": 252.2237199438323
      },
      {
        "Id": "52ce4d62b024409dbd0721aa54818f96",
        "Name": "Surface.ByPatch",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4936.086966150136,
        "Y": -218.22464735687208
      },
      {
        "Id": "ec14614c246d43518700a9c49af362ab",
        "Name": "Python Script || Generate Optimised Towers",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 5306.829427451162,
        "Y": -127.55288888614086
      },
      {
        "Id": "09e9d916ccf244cf9ed1b0cb23beab4a",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 5901.250269840882,
        "Y": -128.91492395384194
      },
      {
        "Id": "32cb82685ac24c3886579f8c28b95458",
        "Name": "Geometry.Translate",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 5591.597927190281,
        "Y": 248.55604824965758
      },
      {
        "Id": "95c58a04375c48ad8db23c0c45b27acb",
        "Name": "Surface.PerimeterCurves",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 5904.489215642329,
        "Y": 82.46931599743857
      },
      {
        "Id": "5eafbf17498240c29ebc2644c8564525",
        "Name": "DirectShape.ByGeometry",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 8078.961731258371,
        "Y": 458.21927322374995
      },
      {
        "Id": "47bfa7b310fd466c943f36475365a688",
        "Name": "Categories",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 7802.746644093752,
        "Y": 567.5751999820677
      },
      {
        "Id": "df4f2f6b7ca1439e9b71d0d36e90db73",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 7745.1075386864095,
        "Y": 892.7997627693077
      },
      {
        "Id": "712e9ed18ed7465daa5fa0d98732d069",
        "Name": "Geometry.Translate",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6873.524856985666,
        "Y": 387.22356350394784
      },
      {
        "Id": "11101ee47f41483781353813cd44c2a1",
        "Name": "List.LastItem",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 6823.848429968234,
        "Y": 125.78519702006906
      },
      {
        "Id": "f50e7d8d48bf4d03a15b693c77ec2cb6",
        "Name": "Vector.ZAxis",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 6521.306141432243,
        "Y": 374.2704308699167
      },
      {
        "Id": "4fc7b3d1e8ac4aa99617ec3a075008cf",
        "Name": "Curve.ExtrudeAsSolid",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 6451.430952119418,
        "Y": 148.3819015337076
      },
      {
        "Id": "babd079374f14a37a54eca0211a36621",
        "Name": "List.Insert",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 7045.716585485584,
        "Y": -19.925842766950154
      },
      {
        "Id": "191e489788b8469e86c33e4fed7fb9bf",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6331.805035119661,
        "Y": 480.0834637277294
      },
      {
        "Id": "f6ea33ab01414876aa67715f3dac756e",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 7628.125118765601,
        "Y": -17.102032492037324
      },
      {
        "Id": "f0c147462d474e4aaa9a52247c8debdd",
        "Name": "GeometryColor.ByGeometryColor",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 8149.25851565814,
        "Y": 30.575589770493934
      },
      {
        "Id": "778a367902c64c3a83250e2860e06a81",
        "Name": "Watch 3D",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 8540.655115671245,
        "Y": -77.06474733845789
      },
      {
        "Id": "78b1140accbb44a3bc0bde121d3155b2",
        "Name": "Solid.ByLoft",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 7263.456437636923,
        "Y": -184.37877325841328
      },
      {
        "Id": "44e0777c4c174d37a345bc13ded7a4bb",
        "Name": "Solid.ByUnion",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 7329.580008486998,
        "Y": -13.899357820562727
      },
      {
        "Id": "252b196632444532be5cf44ea83b4cc1",
        "Name": "GeometryColor.ByGeometryColor",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 8148.482296719331,
        "Y": -89.33518757496677
      },
      {
        "Id": "eeaa6656996549509254bb9c4a704fc9",
        "Name": "List.Count",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 6842.872125035962,
        "Y": -197.4187188672604
      },
      {
        "Id": "49397cd9043443b2830e4befbddc74ee",
        "Name": "Material.ByName",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 7779.0902216305685,
        "Y": 739.1348201664623
      },
      {
        "Id": "4ae9931f71054603a96fb08d5c6cf07a",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 7448.029777948751,
        "Y": 751.3818112546451
      },
      {
        "Id": "7a30ca81227c49ceaf7fa4596780d8ec",
        "Name": "Todos Pisos Surfaces",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 6237.297593966792,
        "Y": -744.9310988485038
      },
      {
        "Id": "5350b11f455947c8a803f967fca1ea45",
        "Name": "Area Terreno",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6239.813974139401,
        "Y": -981.2346221465548
      },
      {
        "Id": "3b09c164f3824d0db8e3f90eb85df866",
        "Name": "Area Primer Piso",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6235.047513993182,
        "Y": -864.1424099351086
      },
      {
        "Id": "764ffbe251cf43ce9dd2b5f855d0e534",
        "Name": "Surface.Area",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6568.445567158089,
        "Y": -810.77213006337
      },
      {
        "Id": "0ea720bac6d04c879829f377132a0d49",
        "Name": "Calcular COS PB",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6566.310662954826,
        "Y": -949.1463568337556
      },
      {
        "Id": "b2437c259ea641c4b05aaf6df3ca5a7e",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6656.052922969446,
        "Y": -680.591632731567
      },
      {
        "Id": "e34109a9dd7e4b4c8cbc248e46b111cc",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 7136.294459368974,
        "Y": -647.9252555661649
      },
      {
        "Id": "1a080fdcac814227b47876ea4de13193",
        "Name": "Lift Provisional Area",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6882.662481291811,
        "Y": -538.8734866376205
      },
      {
        "Id": "a4af0f9b3c1e4fa5bb14c6fc2cdd5b11",
        "Name": "COS_primer_piso",
        "IsSetAsInput": false,
        "IsSetAsOutput": true,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 7712.137552216015,
        "Y": -1066.9493224057933
      },
      {
        "Id": "3e49e21ee498433380492bb86bc19b75",
        "Name": "area_total_construida",
        "IsSetAsInput": false,
        "IsSetAsOutput": true,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 7703.785424827695,
        "Y": -821.5207384816472
      },
      {
        "Id": "dd272abab5944397b5cf7c5203dcdf3a",
        "Name": "area_provisional_para_asensor",
        "IsSetAsInput": false,
        "IsSetAsOutput": true,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 7696.380106096803,
        "Y": -571.4299384272908
      },
      {
        "Id": "d70d39a5a1934922890056e140a12b3e",
        "Name": "Area Total Construible (ATT)",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6999.763418122746,
        "Y": -982.1507643232824
      },
      {
        "Id": "9fb6e589d3f64835bf9e2209ffc9494b",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6929.486133135265,
        "Y": -806.5081656112179
      },
      {
        "Id": "c1904ac21c684606b098adbd267a484c",
        "Name": "area_total_terreno",
        "IsSetAsInput": false,
        "IsSetAsOutput": true,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 7715.254496640259,
        "Y": -944.6647183991463
      },
      {
        "Id": "d74af90ff7e2488d893614cd0e3bccbc",
        "Name": "CUS_Edificio_Total",
        "IsSetAsInput": false,
        "IsSetAsOutput": true,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 7700.7505732897835,
        "Y": -700.4928735324374
      },
      {
        "Id": "2f707b6444db4dc2a55b7a8bcef0f04b",
        "Name": "PolyCurve.ByJoinedCurves",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6319.138243683302,
        "Y": -134.076325880249
      },
      {
        "Id": "cb6a7d46d0414a17affe75ff385a029e",
        "Name": "PolyCurve.ByJoinedCurves",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3760.1164864456614,
        "Y": 72.70043298239852
      },
      {
        "Id": "2ede5af835fe4ba99a06d3905bd93106",
        "Name": "PolyCurve.ByJoinedCurves",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 276.6590047611926,
        "Y": 292.9369330719892
      },
      {
        "Id": "b80d3af423a44ad08b0229f54ccddca6",
        "Name": "If",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 1210.8859343011259,
        "Y": -261.121532898772
      },
      {
        "Id": "efe4e9d5f67c4a6894afc2282977fc24",
        "Name": "Select Model Elements",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -1638.1569105282938,
        "Y": -307.9880980378639
      },
      {
        "Id": "aedb17b190cf4adc9441de2f3554573e",
        "Name": "Gate",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 7470.858742581341,
        "Y": 438.4781690097543
      },
      {
        "Id": "3545939b1f8542b3bed12123c59e1477",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 7355.0099168545985,
        "Y": -949.3200837704596
      },
      {
        "Id": "e04a719a68924b5a94e9de1c742a9cb9",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 7326.9487537917175,
        "Y": -515.0979400998392
      },
      {
        "Id": "2f5eba3cd1d8439699cc41d171326418",
        "Name": "Remember",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 258.17647409123765,
        "Y": -100.19362068143164
      },
      {
        "Id": "54a757f470a948e095350107d443356c",
        "Name": "File Path",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -1408.8627597813547,
        "Y": -706.6338669503529
      },
      {
        "Id": "2e512c18f3aa487da8e61b35e127b864",
        "Name": "Data.ImportCSV",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -885.1842679679539,
        "Y": -534.7366086747588
      },
      {
        "Id": "4c95da1afd4643af8b7e96f6e9cc3a0b",
        "Name": "Python Script",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -553.0644815154546,
        "Y": -518.6310263711089
      },
      {
        "Id": "f3fb2964ae644e828d2cf4e8b30d0fa6",
        "Name": "ZonaConstruccion",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -1644.6249403311847,
        "Y": -167.08355314454138
      },
      {
        "Id": "c554d7fa17de4e75a8871bc375acfd97",
        "Name": "AlturaPisos",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -1657.1540342779963,
        "Y": 124.98783128145624
      },
      {
        "Id": "cdfd3887bd794d38b535a50bd9c95a07",
        "Name": "AlturaPisoEscalada",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -1263.7605461629792,
        "Y": 111.39592389710106
      },
      {
        "Id": "3040829c792f42cbb9bca4d71c94db53",
        "Name": "AlturaEdificio",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -981.2951641696864,
        "Y": 6.11261716359968
      },
      {
        "Id": "7b74f919e0dd43ab9a7e802292584bd0",
        "Name": "offsetsList",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 252.0185941469581,
        "Y": -579.709562992919
      },
      {
        "Id": "28022bbb635f4236ada488a6d71f2d17",
        "Name": "Surface.Area",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 437.1208247650038,
        "Y": 1376.1892113072072
      },
      {
        "Id": "e6b392b585844032ab42ddfd8df1cd26",
        "Name": "Surface.ByPatch",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 440.23746647832377,
        "Y": 1198.540633647949
      },
      {
        "Id": "960e616a3b544567b3b0af84df4e4d40",
        "Name": "PolyCurve.ByJoinedCurves",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 434.00418305168296,
        "Y": 949.2092965823241
      },
      {
        "Id": "f42a5a9ce2d94bfc9df1e00864025e85",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 452.7040333316045,
        "Y": 752.8608686431444
      },
      {
        "Id": "23d6e0c5a48740ec9a8b0b2a9ae0cf0d",
        "Name": "CantidadPisos",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -1644.7210647372158,
        "Y": -8.100258529533676
      },
      {
        "Id": "fb3e263b93454508a7d71510753eb6d6",
        "Name": "Python Script",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -538.0527159741432,
        "Y": -92.82118198234639
      },
      {
        "Id": "d73e2a9d6e6e4b8e93203851c17c4ab9",
        "Name": "IF PERSONALIZADO",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -275.1112189370299,
        "Y": -85.5095786025127
      },
      {
        "Id": "8bf384e73cbe49b6ad2293e2bf0d7690",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -593.9210993986233,
        "Y": 40.35205743172537
      },
      {
        "Id": "0826cf9cfa424ad1b58d3f0c361923fd",
        "Name": "Parser",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -127.58398223049153,
        "Y": -501.2585498705721
      },
      {
        "Id": "7e2ab8e6e02c41a7bff86de27ffa6654",
        "Name": "cantidad_pisos_finales",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 7693.885085702218,
        "Y": -441.9562296671993
      },
      {
        "Id": "a17f925d99da4948aad68bd23c7790d6",
        "Name": "Pisos finales",
        "IsSetAsInput": false,
        "IsSetAsOutput": true,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -187.676289610484,
        "Y": 186.12805658287596
      },
      {
        "Id": "1335dee1705744188a3d253a8a652b29",
        "Name": "N1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -700.4616574999193,
        "Y": 389.2276254813429
      },
      {
        "Id": "9ac0877237ef449aa1229d2b031ea5ab",
        "Name": "N2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -698.4661975114589,
        "Y": 510.9506847774379
      },
      {
        "Id": "3a1f27b23de24115a59521e6cb51945b",
        "Name": "N3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -696.4707375229984,
        "Y": 622.69644413123
      },
      {
        "Id": "46505aa117cb4f28a3889d82b0dee11b",
        "Name": "N6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -713.5945152958896,
        "Y": 951.9927423426193
      },
      {
        "Id": "f9b765743a1145dcbab3337b88b7fd73",
        "Name": "N7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -731.5309551343375,
        "Y": 1067.7521217310295
      },
      {
        "Id": "b52a7a0d5c884018afbc4f68304986a9",
        "Name": "N5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -687.6081353305076,
        "Y": 838.2969231157606
      },
      {
        "Id": "b05ecf76f14442a897fbce87da9c331b",
        "Name": "N4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -677.6081353305078,
        "Y": 732.5602437850473
      }
    ],
    "Annotations": [
      {
        "Id": "adae2f4a43bb48259e0f6dfde51bf241",
        "Title": "OffSet Generation",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "d2fd781fe9344fe89e9b0bec53f1654f",
          "de48e0843452449e92eac4003a56188a",
          "9c5d468631b349e7b48203e32f41d87a",
          "5005d2ebff4d4fb09c850c05d23946cf",
          "6c265e95ece84e008d206e486d8e3dca",
          "79671cd3b15240e59cc8efd10f5f2432",
          "923d758d769340eb892747e739da45e7",
          "6fd536730ced4b8696acfb6ee09203aa",
          "a4b8019aad784dd39cdcc2664e4b8d80",
          "fe0c642581f74018b67743a350c9a307",
          "87d5cc7da2ab4b89b4192c5a04e20dc8",
          "67dbec1dd7a14a479ff1d949d5226399",
          "757528320c634f11a234503d34586e43",
          "51e93c0b52a94d9a8f1858a85af00a82",
          "4edd1d4286784e9eb71d13b095632da6",
          "da8345834459417db16f15a79002b17d",
          "f67f9e349679401e8d6049eb4fba22be",
          "389c3f3fdb484da8b3cabed49b7cbb63",
          "7ce3379f72ae41548c81326b080943d5",
          "d5b398fd67c3432699d988b4b3926751",
          "96b5108355a9464b82e3b1a9cc19a502",
          "3818cec472f14ad6a879f159763cf5b7",
          "902077b7f26a414cb465c2a3ca052595",
          "638e7b4c006d4ba989cffd52dedffbc3",
          "d43fbc13969f415cb57a4a7baef2d91e",
          "22f90cee874149aab8ea629b313de270",
          "aadfc04cd5cc4d5cb332d52783dfd28e",
          "33bd2036d4fd4bb8982df4ab5ad881df",
          "2828d27cf5c04b7bb23ba3f4f607fa24",
          "5c238076d8254c348342c68f35ebe4e4",
          "fe1aaff34b9940a6954be042980951fa",
          "23dcfb05e8a640888153f1d8dc716395",
          "e03595219eff445b973be39dad27c3e7",
          "cb6a7d46d0414a17affe75ff385a029e",
          "2ede5af835fe4ba99a06d3905bd93106",
          "b80d3af423a44ad08b0229f54ccddca6",
          "2f5eba3cd1d8439699cc41d171326418"
        ],
        "HasNestedGroups": false,
        "Left": 216.5542082227921,
        "Top": -412.62249868444815,
        "Width": 4146.120321535394,
        "Height": 1097.4479247243198,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": -339.62249868444815,
        "InitialHeight": 1007.4479247243198,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "9bebed6d3e7d4c85ab054ee9489fee71",
        "Title": "Geometry [Dynamo/Revit]:\r\nConverts Dynamo geometry into a direct shape to be visualized inside Revit",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "5eafbf17498240c29ebc2644c8564525",
          "47bfa7b310fd466c943f36475365a688",
          "df4f2f6b7ca1439e9b71d0d36e90db73",
          "2c9dbd8242a74ab8be8f058f9931de97"
        ],
        "HasNestedGroups": false,
        "Left": 7735.1075386864095,
        "Top": 255.21927322374995,
        "Width": 613.8541925719628,
        "Height": 781.5804895455577,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 458.21927322374995,
        "InitialHeight": 579.5804895455577,
        "TextblockHeight": 193.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "1501be7719f04130ace4b0c02fb27b37",
        "Title": "Geometry [Dynamo]:\r\nGenerate entire floors based on floorplates and combine them into a single solid",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "11101ee47f41483781353813cd44c2a1",
          "712e9ed18ed7465daa5fa0d98732d069",
          "f50e7d8d48bf4d03a15b693c77ec2cb6",
          "babd079374f14a37a54eca0211a36621",
          "eeaa6656996549509254bb9c4a704fc9",
          "78b1140accbb44a3bc0bde121d3155b2",
          "44e0777c4c174d37a345bc13ded7a4bb",
          "4fc7b3d1e8ac4aa99617ec3a075008cf",
          "191e489788b8469e86c33e4fed7fb9bf",
          "2f707b6444db4dc2a55b7a8bcef0f04b"
        ],
        "HasNestedGroups": false,
        "Left": 6309.138243683302,
        "Top": -357.4187188672604,
        "Width": 1226.441764803696,
        "Height": 969.5021825949898,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": -197.4187188672604,
        "InitialHeight": 822.5021825949898,
        "TextblockHeight": 150.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "5ac14517fdfc451c9eb9d44a92e637ff",
        "Title": "Visualization:\r\nColourizes Dynamo geometry in \r\nthe Background preview window",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "252b196632444532be5cf44ea83b4cc1",
          "f6ea33ab01414876aa67715f3dac756e",
          "f0c147462d474e4aaa9a52247c8debdd"
        ],
        "HasNestedGroups": false,
        "Left": 7618.125118765601,
        "Top": -227.33518757496677,
        "Width": 861.1333968925401,
        "Height": 419.9107773454607,
        "FontSize": 30.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": -89.33518757496677,
        "InitialHeight": 264.9107773454607,
        "TextblockHeight": 128.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "29ef4a9094d94ea984fa2de9ce6999c2",
        "Title": "Matematica: \r\nCalcular area total, area construccion and area de asensores",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "7a30ca81227c49ceaf7fa4596780d8ec",
          "5350b11f455947c8a803f967fca1ea45",
          "3b09c164f3824d0db8e3f90eb85df866",
          "764ffbe251cf43ce9dd2b5f855d0e534",
          "0ea720bac6d04c879829f377132a0d49",
          "b2437c259ea641c4b05aaf6df3ca5a7e",
          "e34109a9dd7e4b4c8cbc248e46b111cc",
          "1a080fdcac814227b47876ea4de13193",
          "d70d39a5a1934922890056e140a12b3e",
          "3545939b1f8542b3bed12123c59e1477",
          "e04a719a68924b5a94e9de1c742a9cb9"
        ],
        "HasNestedGroups": false,
        "Left": 6225.047513993182,
        "Top": -1098.1507643232824,
        "Width": 1408.9624028614162,
        "Height": 721.2772776856618,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": -982.1507643232824,
        "InitialHeight": 612.0528242234432,
        "TextblockHeight": 106.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "0611f460ba104295989b9be1cfea4a41",
        "Title": "Outputs",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "a4af0f9b3c1e4fa5bb14c6fc2cdd5b11",
          "3e49e21ee498433380492bb86bc19b75",
          "dd272abab5944397b5cf7c5203dcdf3a",
          "d74af90ff7e2488d893614cd0e3bccbc",
          "c1904ac21c684606b098adbd267a484c",
          "7e2ab8e6e02c41a7bff86de27ffa6654",
          "46f4e0ead7bd4bb78ac3f3d5c20d43ea"
        ],
        "HasNestedGroups": false,
        "Left": 7683.885085702218,
        "Top": -1139.9493224057933,
        "Width": 369.33615003537307,
        "Height": 833.993092738594,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": -1066.9493224057933,
        "InitialHeight": 769.993092738594,
        "TextblockHeight": 63.0,
        "Background": "#FFFFAA45"
      },
      {
        "Id": "ab6414ac0a1f4374907515b423642e10",
        "Title": "Geometry [Dynamo]:\r\nGenerate different floor plates based on the primary floor plate and place them at the correct hegiht",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "95c58a04375c48ad8db23c0c45b27acb",
          "ec14614c246d43518700a9c49af362ab",
          "09e9d916ccf244cf9ed1b0cb23beab4a",
          "32cb82685ac24c3886579f8c28b95458",
          "f6ca0678df9d467fafe71ba36503056d"
        ],
        "HasNestedGroups": false,
        "Left": 5262.841002456933,
        "Top": -266.91492395384194,
        "Width": 909.6482131853963,
        "Height": 759.4709722034995,
        "FontSize": 30.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": -128.91492395384194,
        "InitialHeight": 534.9705196901989,
        "TextblockHeight": 128.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "f6ca0678df9d467fafe71ba36503056d",
        "Title": "INPUTS\r\n________________________________________\r\nIN[0] = Random Floor Plate [Surface]\r\nIN[1] = Current Time [DateTime]\r\nIN[2] = Maximum Building Height [Double]\r\nIN[3] = Offset Site Boundary [Crvs]\r\n\r\nOUPUT\r\n________________________________________\r\nOUT[0] = Floor Plates [Surface]\r\nOUT[1] = Floor Heights [Double]\r\nOUT[2] = Number of Floors [Int]",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 5272.841002456933,
        "Top": 269.0555957363569,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "2c9dbd8242a74ab8be8f058f9931de97",
        "Title": "NOTE:\r\nUnfreeze this node to generate a direct shape of the selected building in the Revit enviroment.",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 8039.291838239806,
        "Top": 501.78245733028587,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "46f4e0ead7bd4bb78ac3f3d5c20d43ea",
        "Title": "Salidas del modelo, se utilizaran para generar la optimizacion",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 7767.221235737591,
        "Top": -1052.9897304021306,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      }
    ],
    "X": 750.2210560866379,
    "Y": -212.43546224948437,
    "Zoom": 0.687465540737636
  }
}